/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;

/**
 * Class of authentication token
 */
@ApiModel(description = "Class of authentication token")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class AuthenticationTokenDTO {
  @SerializedName("error")
  private String error = null;

  @SerializedName("errorDescription")
  private String errorDescription = null;

  @SerializedName("errorUri")
  private String errorUri = null;

  @SerializedName("accessToken")
  private String accessToken = null;

  @SerializedName("tokenType")
  private String tokenType = null;

  @SerializedName("expiresIn")
  private Integer expiresIn = null;

  @SerializedName("refreshToken")
  private String refreshToken = null;

  @SerializedName("issued")
  private DateTime issued = null;

  @SerializedName("expires")
  private DateTime expires = null;

  @SerializedName("arxclientId")
  private String arxclientId = null;

  @SerializedName("arxuserMustChangePassword")
  private Boolean arxuserMustChangePassword = null;

  public AuthenticationTokenDTO error(String error) {
    this.error = error;
    return this;
  }

   /**
   * Error code
   * @return error
  **/
  @ApiModelProperty(value = "Error code")
  public String getError() {
    return error;
  }

  public void setError(String error) {
    this.error = error;
  }

  public AuthenticationTokenDTO errorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
    return this;
  }

   /**
   * Error desciption
   * @return errorDescription
  **/
  @ApiModelProperty(value = "Error desciption")
  public String getErrorDescription() {
    return errorDescription;
  }

  public void setErrorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
  }

  public AuthenticationTokenDTO errorUri(String errorUri) {
    this.errorUri = errorUri;
    return this;
  }

   /**
   * Error Uri
   * @return errorUri
  **/
  @ApiModelProperty(value = "Error Uri")
  public String getErrorUri() {
    return errorUri;
  }

  public void setErrorUri(String errorUri) {
    this.errorUri = errorUri;
  }

  public AuthenticationTokenDTO accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Access token string
   * @return accessToken
  **/
  @ApiModelProperty(value = "Access token string")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public AuthenticationTokenDTO tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Token type (bearer)
   * @return tokenType
  **/
  @ApiModelProperty(value = "Token type (bearer)")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }

  public AuthenticationTokenDTO expiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Token and refresh token expire in ExpiresIn seconds
   * @return expiresIn
  **/
  @ApiModelProperty(value = "Token and refresh token expire in ExpiresIn seconds")
  public Integer getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }

  public AuthenticationTokenDTO refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Refresh token string
   * @return refreshToken
  **/
  @ApiModelProperty(value = "Refresh token string")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public AuthenticationTokenDTO issued(DateTime issued) {
    this.issued = issued;
    return this;
  }

   /**
   * Issue date of the token
   * @return issued
  **/
  @ApiModelProperty(value = "Issue date of the token")
  public DateTime getIssued() {
    return issued;
  }

  public void setIssued(DateTime issued) {
    this.issued = issued;
  }

  public AuthenticationTokenDTO expires(DateTime expires) {
    this.expires = expires;
    return this;
  }

   /**
   * Expiration date of the token
   * @return expires
  **/
  @ApiModelProperty(value = "Expiration date of the token")
  public DateTime getExpires() {
    return expires;
  }

  public void setExpires(DateTime expires) {
    this.expires = expires;
  }

  public AuthenticationTokenDTO arxclientId(String arxclientId) {
    this.arxclientId = arxclientId;
    return this;
  }

   /**
   * Client id
   * @return arxclientId
  **/
  @ApiModelProperty(value = "Client id")
  public String getArxclientId() {
    return arxclientId;
  }

  public void setArxclientId(String arxclientId) {
    this.arxclientId = arxclientId;
  }

  public AuthenticationTokenDTO arxuserMustChangePassword(Boolean arxuserMustChangePassword) {
    this.arxuserMustChangePassword = arxuserMustChangePassword;
    return this;
  }

   /**
   * User must change password after this &#39;login&#39;
   * @return arxuserMustChangePassword
  **/
  @ApiModelProperty(value = "User must change password after this 'login'")
  public Boolean isArxuserMustChangePassword() {
    return arxuserMustChangePassword;
  }

  public void setArxuserMustChangePassword(Boolean arxuserMustChangePassword) {
    this.arxuserMustChangePassword = arxuserMustChangePassword;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationTokenDTO authenticationTokenDTO = (AuthenticationTokenDTO) o;
    return Objects.equals(this.error, authenticationTokenDTO.error) &&
        Objects.equals(this.errorDescription, authenticationTokenDTO.errorDescription) &&
        Objects.equals(this.errorUri, authenticationTokenDTO.errorUri) &&
        Objects.equals(this.accessToken, authenticationTokenDTO.accessToken) &&
        Objects.equals(this.tokenType, authenticationTokenDTO.tokenType) &&
        Objects.equals(this.expiresIn, authenticationTokenDTO.expiresIn) &&
        Objects.equals(this.refreshToken, authenticationTokenDTO.refreshToken) &&
        Objects.equals(this.issued, authenticationTokenDTO.issued) &&
        Objects.equals(this.expires, authenticationTokenDTO.expires) &&
        Objects.equals(this.arxclientId, authenticationTokenDTO.arxclientId) &&
        Objects.equals(this.arxuserMustChangePassword, authenticationTokenDTO.arxuserMustChangePassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, errorDescription, errorUri, accessToken, tokenType, expiresIn, refreshToken, issued, expires, arxclientId, arxuserMustChangePassword);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationTokenDTO {\n");
    
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    errorDescription: ").append(toIndentedString(errorDescription)).append("\n");
    sb.append("    errorUri: ").append(toIndentedString(errorUri)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    issued: ").append(toIndentedString(issued)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    arxclientId: ").append(toIndentedString(arxclientId)).append("\n");
    sb.append("    arxuserMustChangePassword: ").append(toIndentedString(arxuserMustChangePassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

