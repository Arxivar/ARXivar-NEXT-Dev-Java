/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AdditionalConcreteFields;
import io.swagger.client.model.ContactDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of the adress book item
 */
@ApiModel(description = "Class of the adress book item")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class AddressBookDTO {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("businessName")
  private String businessName = null;

  @SerializedName("fax")
  private String fax = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("postalCode")
  private String postalCode = null;

  @SerializedName("province")
  private String province = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phoneNumber")
  private String phoneNumber = null;

  @SerializedName("cellPhone")
  private String cellPhone = null;

  @SerializedName("state")
  private Integer state = null;

  @SerializedName("type")
  private Integer type = null;

  @SerializedName("addressBookCategoryId")
  private Integer addressBookCategoryId = null;

  @SerializedName("businessUnit")
  private String businessUnit = null;

  @SerializedName("class")
  private String propertyClass = null;

  @SerializedName("fiscalCode")
  private String fiscalCode = null;

  @SerializedName("vatNumber")
  private String vatNumber = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("addressBookBusinessUnitCode")
  private String addressBookBusinessUnitCode = null;

  @SerializedName("addressBookNote")
  private String addressBookNote = null;

  @SerializedName("externalCode")
  private String externalCode = null;

  @SerializedName("additionalFields")
  private AdditionalConcreteFields additionalFields = null;

  @SerializedName("contacts")
  private List<ContactDTO> contacts = null;

  public AddressBookDTO id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the address book
   * @return id
  **/
  @ApiModelProperty(value = "Unique identifier of the address book")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public AddressBookDTO businessName(String businessName) {
    this.businessName = businessName;
    return this;
  }

   /**
   * Business name
   * @return businessName
  **/
  @ApiModelProperty(value = "Business name")
  public String getBusinessName() {
    return businessName;
  }

  public void setBusinessName(String businessName) {
    this.businessName = businessName;
  }

  public AddressBookDTO fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * Fax number
   * @return fax
  **/
  @ApiModelProperty(value = "Fax number")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public AddressBookDTO address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Address
   * @return address
  **/
  @ApiModelProperty(value = "Address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public AddressBookDTO location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location
   * @return location
  **/
  @ApiModelProperty(value = "Location")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public AddressBookDTO postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal code
   * @return postalCode
  **/
  @ApiModelProperty(value = "Postal code")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public AddressBookDTO province(String province) {
    this.province = province;
    return this;
  }

   /**
   * Province
   * @return province
  **/
  @ApiModelProperty(value = "Province")
  public String getProvince() {
    return province;
  }

  public void setProvince(String province) {
    this.province = province;
  }

  public AddressBookDTO country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country
   * @return country
  **/
  @ApiModelProperty(value = "Country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public AddressBookDTO email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Enail address
   * @return email
  **/
  @ApiModelProperty(value = "Enail address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public AddressBookDTO phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Phone number
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "Phone number")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public AddressBookDTO cellPhone(String cellPhone) {
    this.cellPhone = cellPhone;
    return this;
  }

   /**
   * Call phone number
   * @return cellPhone
  **/
  @ApiModelProperty(value = "Call phone number")
  public String getCellPhone() {
    return cellPhone;
  }

  public void setCellPhone(String cellPhone) {
    this.cellPhone = cellPhone;
  }

  public AddressBookDTO state(Integer state) {
    this.state = state;
    return this;
  }

   /**
   * Possible values:  0: Active  1: NotActive 
   * @return state
  **/
  @ApiModelProperty(value = "Possible values:  0: Active  1: NotActive ")
  public Integer getState() {
    return state;
  }

  public void setState(Integer state) {
    this.state = state;
  }

  public AddressBookDTO type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Possible values:  0: User  1: Group  2: Business 
   * @return type
  **/
  @ApiModelProperty(value = "Possible values:  0: User  1: Group  2: Business ")
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }

  public AddressBookDTO addressBookCategoryId(Integer addressBookCategoryId) {
    this.addressBookCategoryId = addressBookCategoryId;
    return this;
  }

   /**
   * Unique identifier of the category
   * @return addressBookCategoryId
  **/
  @ApiModelProperty(value = "Unique identifier of the category")
  public Integer getAddressBookCategoryId() {
    return addressBookCategoryId;
  }

  public void setAddressBookCategoryId(Integer addressBookCategoryId) {
    this.addressBookCategoryId = addressBookCategoryId;
  }

  public AddressBookDTO businessUnit(String businessUnit) {
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * BusinessUnit code
   * @return businessUnit
  **/
  @ApiModelProperty(value = "BusinessUnit code")
  public String getBusinessUnit() {
    return businessUnit;
  }

  public void setBusinessUnit(String businessUnit) {
    this.businessUnit = businessUnit;
  }

  public AddressBookDTO propertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Class
   * @return propertyClass
  **/
  @ApiModelProperty(value = "Class")
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
  }

  public AddressBookDTO fiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
    return this;
  }

   /**
   * Fiscal Code
   * @return fiscalCode
  **/
  @ApiModelProperty(value = "Fiscal Code")
  public String getFiscalCode() {
    return fiscalCode;
  }

  public void setFiscalCode(String fiscalCode) {
    this.fiscalCode = fiscalCode;
  }

  public AddressBookDTO vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

   /**
   * Partita Iva
   * @return vatNumber
  **/
  @ApiModelProperty(value = "Partita Iva")
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }

  public AddressBookDTO priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Possible values:  0: NoSend  1: Fax  2: Email  3: Fax_Email  4: Email_Fax  5: Fax_Plus_Mail  6: Print 
   * @return priority
  **/
  @ApiModelProperty(value = "Possible values:  0: NoSend  1: Fax  2: Email  3: Fax_Email  4: Email_Fax  5: Fax_Plus_Mail  6: Print ")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public AddressBookDTO addressBookBusinessUnitCode(String addressBookBusinessUnitCode) {
    this.addressBookBusinessUnitCode = addressBookBusinessUnitCode;
    return this;
  }

   /**
   * Business Unit code for not internal user
   * @return addressBookBusinessUnitCode
  **/
  @ApiModelProperty(value = "Business Unit code for not internal user")
  public String getAddressBookBusinessUnitCode() {
    return addressBookBusinessUnitCode;
  }

  public void setAddressBookBusinessUnitCode(String addressBookBusinessUnitCode) {
    this.addressBookBusinessUnitCode = addressBookBusinessUnitCode;
  }

  public AddressBookDTO addressBookNote(String addressBookNote) {
    this.addressBookNote = addressBookNote;
    return this;
  }

   /**
   * Note
   * @return addressBookNote
  **/
  @ApiModelProperty(value = "Note")
  public String getAddressBookNote() {
    return addressBookNote;
  }

  public void setAddressBookNote(String addressBookNote) {
    this.addressBookNote = addressBookNote;
  }

  public AddressBookDTO externalCode(String externalCode) {
    this.externalCode = externalCode;
    return this;
  }

   /**
   * External Code
   * @return externalCode
  **/
  @ApiModelProperty(value = "External Code")
  public String getExternalCode() {
    return externalCode;
  }

  public void setExternalCode(String externalCode) {
    this.externalCode = externalCode;
  }

  public AddressBookDTO additionalFields(AdditionalConcreteFields additionalFields) {
    this.additionalFields = additionalFields;
    return this;
  }

   /**
   * Additional fields
   * @return additionalFields
  **/
  @ApiModelProperty(value = "Additional fields")
  public AdditionalConcreteFields getAdditionalFields() {
    return additionalFields;
  }

  public void setAdditionalFields(AdditionalConcreteFields additionalFields) {
    this.additionalFields = additionalFields;
  }

  public AddressBookDTO contacts(List<ContactDTO> contacts) {
    this.contacts = contacts;
    return this;
  }

  public AddressBookDTO addContactsItem(ContactDTO contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<ContactDTO>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Contacts
   * @return contacts
  **/
  @ApiModelProperty(value = "Contacts")
  public List<ContactDTO> getContacts() {
    return contacts;
  }

  public void setContacts(List<ContactDTO> contacts) {
    this.contacts = contacts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressBookDTO addressBookDTO = (AddressBookDTO) o;
    return Objects.equals(this.id, addressBookDTO.id) &&
        Objects.equals(this.businessName, addressBookDTO.businessName) &&
        Objects.equals(this.fax, addressBookDTO.fax) &&
        Objects.equals(this.address, addressBookDTO.address) &&
        Objects.equals(this.location, addressBookDTO.location) &&
        Objects.equals(this.postalCode, addressBookDTO.postalCode) &&
        Objects.equals(this.province, addressBookDTO.province) &&
        Objects.equals(this.country, addressBookDTO.country) &&
        Objects.equals(this.email, addressBookDTO.email) &&
        Objects.equals(this.phoneNumber, addressBookDTO.phoneNumber) &&
        Objects.equals(this.cellPhone, addressBookDTO.cellPhone) &&
        Objects.equals(this.state, addressBookDTO.state) &&
        Objects.equals(this.type, addressBookDTO.type) &&
        Objects.equals(this.addressBookCategoryId, addressBookDTO.addressBookCategoryId) &&
        Objects.equals(this.businessUnit, addressBookDTO.businessUnit) &&
        Objects.equals(this.propertyClass, addressBookDTO.propertyClass) &&
        Objects.equals(this.fiscalCode, addressBookDTO.fiscalCode) &&
        Objects.equals(this.vatNumber, addressBookDTO.vatNumber) &&
        Objects.equals(this.priority, addressBookDTO.priority) &&
        Objects.equals(this.addressBookBusinessUnitCode, addressBookDTO.addressBookBusinessUnitCode) &&
        Objects.equals(this.addressBookNote, addressBookDTO.addressBookNote) &&
        Objects.equals(this.externalCode, addressBookDTO.externalCode) &&
        Objects.equals(this.additionalFields, addressBookDTO.additionalFields) &&
        Objects.equals(this.contacts, addressBookDTO.contacts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, businessName, fax, address, location, postalCode, province, country, email, phoneNumber, cellPhone, state, type, addressBookCategoryId, businessUnit, propertyClass, fiscalCode, vatNumber, priority, addressBookBusinessUnitCode, addressBookNote, externalCode, additionalFields, contacts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressBookDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    businessName: ").append(toIndentedString(businessName)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    cellPhone: ").append(toIndentedString(cellPhone)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    addressBookCategoryId: ").append(toIndentedString(addressBookCategoryId)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    fiscalCode: ").append(toIndentedString(fiscalCode)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    addressBookBusinessUnitCode: ").append(toIndentedString(addressBookBusinessUnitCode)).append("\n");
    sb.append("    addressBookNote: ").append(toIndentedString(addressBookNote)).append("\n");
    sb.append("    externalCode: ").append(toIndentedString(externalCode)).append("\n");
    sb.append("    additionalFields: ").append(toIndentedString(additionalFields)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

