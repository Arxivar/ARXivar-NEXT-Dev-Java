/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LogDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Class of log item
 */
@ApiModel(description = "Class of log item")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class LogDTO {
  @SerializedName("id")
  private String id = null;

  @SerializedName("logLevel")
  private Integer logLevel = null;

  @SerializedName("logMessage")
  private String logMessage = null;

  @SerializedName("logDate")
  private DateTime logDate = null;

  @SerializedName("userId")
  private Integer userId = null;

  @SerializedName("userNameComplete")
  private String userNameComplete = null;

  @SerializedName("ipLogger")
  private String ipLogger = null;

  @SerializedName("infoType")
  private Integer infoType = null;

  @SerializedName("infoTypeMessage")
  private String infoTypeMessage = null;

  @SerializedName("infoInt")
  private Integer infoInt = null;

  @SerializedName("sessionId")
  private String sessionId = null;

  @SerializedName("softwareName")
  private String softwareName = null;

  @SerializedName("softwareType")
  private String softwareType = null;

  @SerializedName("infoString")
  private String infoString = null;

  @SerializedName("parentId")
  private String parentId = null;

  @SerializedName("logKind")
  private Integer logKind = null;

  @SerializedName("historyInt")
  private Integer historyInt = null;

  @SerializedName("historyString")
  private String historyString = null;

  @SerializedName("childs")
  private List<LogDTO> childs = null;

  public LogDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier
   * @return id
  **/
  @ApiModelProperty(value = "Identifier")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public LogDTO logLevel(Integer logLevel) {
    this.logLevel = logLevel;
    return this;
  }

   /**
   * Possible values:  1: INFORMATION  2: SUCCESSAUDIT  3: FAILUREAUDIT  4: WARNING  5: ERROR 
   * @return logLevel
  **/
  @ApiModelProperty(value = "Possible values:  1: INFORMATION  2: SUCCESSAUDIT  3: FAILUREAUDIT  4: WARNING  5: ERROR ")
  public Integer getLogLevel() {
    return logLevel;
  }

  public void setLogLevel(Integer logLevel) {
    this.logLevel = logLevel;
  }

  public LogDTO logMessage(String logMessage) {
    this.logMessage = logMessage;
    return this;
  }

   /**
   * Message
   * @return logMessage
  **/
  @ApiModelProperty(value = "Message")
  public String getLogMessage() {
    return logMessage;
  }

  public void setLogMessage(String logMessage) {
    this.logMessage = logMessage;
  }

  public LogDTO logDate(DateTime logDate) {
    this.logDate = logDate;
    return this;
  }

   /**
   * Creation Date
   * @return logDate
  **/
  @ApiModelProperty(value = "Creation Date")
  public DateTime getLogDate() {
    return logDate;
  }

  public void setLogDate(DateTime logDate) {
    this.logDate = logDate;
  }

  public LogDTO userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Author
   * @return userId
  **/
  @ApiModelProperty(value = "Author")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public LogDTO userNameComplete(String userNameComplete) {
    this.userNameComplete = userNameComplete;
    return this;
  }

   /**
   * Author Name
   * @return userNameComplete
  **/
  @ApiModelProperty(value = "Author Name")
  public String getUserNameComplete() {
    return userNameComplete;
  }

  public void setUserNameComplete(String userNameComplete) {
    this.userNameComplete = userNameComplete;
  }

  public LogDTO ipLogger(String ipLogger) {
    this.ipLogger = ipLogger;
    return this;
  }

   /**
   * Ip Address
   * @return ipLogger
  **/
  @ApiModelProperty(value = "Ip Address")
  public String getIpLogger() {
    return ipLogger;
  }

  public void setIpLogger(String ipLogger) {
    this.ipLogger = ipLogger;
  }

  public LogDTO infoType(Integer infoType) {
    this.infoType = infoType;
    return this;
  }

   /**
   * Possible values:  0: Nothing  1: WcfService  2: LogInClient  3: LogOutClient  4: LogInServer  5: LogOutServer  6: LogInSPR  7: LogOutSPR  8: LogInWEB  9: LogOutWEB  10: LogInGeneric  11: LogOutGeneric  12: LogInOCR  13: LogOutOCR  14: WcfServiceDmModuliDelete  15: LogIn  16: LogOut  17: GetDocument  18: SetDocument  19: DmNoteUpdated  20: PluginQueueLogInfo  21: SdAssocDocInserted  22: SdAssocDocDeleted  23: DmBarcodeDeleted  24: DmBarcodeUnMatchProfile  25: DmAllegatiFaxInsertDocument  26: DmDocOpenCheckOut  27: DocumentInsertRelationship  28: RevisioniGetDocument  29: RevisioniDelete  30: DmNpceOutInsert  31: DmNpceOutUpdate  32: DmNpceOutDelete  33: DmAssociazioniInsert  34: DmAllegatiWorkInsert  35: DmProcessDocSetDocumentInEditBuffer  36: DmProcessDocSetDocumentInLine  37: DmProcessDocSetDocumentForProfile  38: DmAllegatiDocInsert  39: DmAllegatiDocUpdate  40: DmAllegatiDocDelete  41: ProfileUpdateProtocollo  42: ProfileDeleted  43: ExternalCall  44: ProfileUndoCheckOut  45: ProfileInserted  46: ProfileLogReaded  47: ProfileUpdate  48: Profile_Field_DocName  49: Profile_Field_Aoo  50: Profile_Field_Numero  51: Profile_Field_DataDoc  52: Profile_Field_Mittente  53: Profile_Field_Destinatario  54: Profile_Field_Cc  55: Profile_Field_CreationDate  56: Profile_Field_Impronta  57: Profile_Field_Device  58: Profile_Field_DataFile  59: Profile_Field_Importante  60: Profile_Field_Revisione  61: Profile_Field_Autore  62: Profile_Field_Protocollo  63: Profile_Field_Anno  64: Profile_Field_Bloccato  65: Profile_Field_Stato  66: Profile_Field_InOut  67: Profile_Field_Scadenza  68: Profile_Field_Flag  69: Profile_Field_WorkFlow  70: Profile_Field_GestRev  71: Profile_Field_EtichettaCd  72: Profile_Field_EtichettaAos  73: Profile_Field_Associazioni  74: Profile_Field_OpenDoc  75: Profile_Field_Allegati  76: Profile_Field_Emergenza  77: Profile_Field_IsAos  78: Profile_Field_EtiReader  79: Profile_Field_ScadAos  80: Profile_Field_Aggiuntivi  81: Profile_Field_DataProt  82: Profile_Field_Compressed  83: ProfileLogMigrated  84: Profile_Field_Originale  85: ProfileSigned  86: ProfileInsertedInFolder  87: ProfileInsertedInFaxOut  88: ProfileInsertedInPratica  89: ProfileInsertedNote  90: LicenseViolated  91: BarcodePrinted  92: WorkflowStarted  93: WorkflowEnded  94: WorkflowEndedForced  95: WorkflowDeleted  96: DmAllegatiDocSignOtpSent  97: DmProfileSignOtpSent  98: ProfileRemovedFromFolder  99: ProfileRemovedFromPratica  100: Dm_Sharing_Insert  101: Dm_Sharing_Update  102: Dm_Sharing_Expiration  103: Dm_Sharing_Read  104: Dm_Sharing_Delete  105: Dm_Sharing_Expiration_NpceOut  106: RemoveDocument  107: Dm_Sharing_Alert  108: Dm_Sharing_MailOut  109: DocumentRemovedFromRelationship  110: DmAssociazioniDelete  111: Dm_Queue_Start  112: Dm_Queue_Change_Progress  113: Dm_Queue_Scheduled  114: Dm_Queue_Terminated  115: Dm_Queue_Cancelled  116: Dm_Queue_Waiting  117: Dm_Queue_Warning  118: Dm_Queue_Info  119: Dm_Instructions_Insert  120: Dm_Instructions_Update  121: Dm_Instructions_Delete  122: Dm_DatiProfilo_Field_Id  123: Dm_DatiProfilo_Field_Valore  124: Dm_DatiProfilo_Field_Contatti  125: Dm_DatiProfilo_Field_Fax  126: Dm_DatiProfilo_Field_Tel  127: Dm_DatiProfilo_Field_Indirizzo  128: Dm_DatiProfilo_Field_Mail  129: Dm_DatiProfilo_Field_Localita  130: Dm_DatiProfilo_Field_Cap  131: Dm_DatiProfilo_Field_Provincia  132: Dm_DatiProfilo_Field_Nazione  133: Dm_DatiProfilo_Field_Contatto  134: Dm_DatiProfilo_Field_Mansione  135: Dm_DatiProfilo_Field_TelNome  136: Dm_DatiProfilo_Field_FaxNome  137: Dm_DatiProfilo_Field_Cell  138: Dm_DatiProfilo_Field_Abitazione  139: Dm_DatiProfilo_Field_Reparto  140: Dm_DatiProfilo_Field_Ufficio  141: Dm_DatiProfilo_Field_Email  142: Dm_DatiProfilo_Field_Riferimento  143: Dm_DatiProfilo_Field_CodFis  144: Dm_DatiProfilo_Field_PartIva  145: Dm_DatiProfilo_Field_Priorita  146: Dm_DatiProfilo_Field_Codice  147: Profile_Field_Senders  148: Dm_Collaboration_Create  149: Dm_Collaboration_ReCollaborate  150: Dm_Collaboration_TakeOff  151: Dm_Collaboration_Delete  152: Profile_Field_DocumentType  153: Profile_Field_Tipo2  154: Profile_Field_Tipo3  155: Dm_Collaboration_Terminate  156: AllegatiDocSigned  157: LogInFailed 
   * @return infoType
  **/
  @ApiModelProperty(value = "Possible values:  0: Nothing  1: WcfService  2: LogInClient  3: LogOutClient  4: LogInServer  5: LogOutServer  6: LogInSPR  7: LogOutSPR  8: LogInWEB  9: LogOutWEB  10: LogInGeneric  11: LogOutGeneric  12: LogInOCR  13: LogOutOCR  14: WcfServiceDmModuliDelete  15: LogIn  16: LogOut  17: GetDocument  18: SetDocument  19: DmNoteUpdated  20: PluginQueueLogInfo  21: SdAssocDocInserted  22: SdAssocDocDeleted  23: DmBarcodeDeleted  24: DmBarcodeUnMatchProfile  25: DmAllegatiFaxInsertDocument  26: DmDocOpenCheckOut  27: DocumentInsertRelationship  28: RevisioniGetDocument  29: RevisioniDelete  30: DmNpceOutInsert  31: DmNpceOutUpdate  32: DmNpceOutDelete  33: DmAssociazioniInsert  34: DmAllegatiWorkInsert  35: DmProcessDocSetDocumentInEditBuffer  36: DmProcessDocSetDocumentInLine  37: DmProcessDocSetDocumentForProfile  38: DmAllegatiDocInsert  39: DmAllegatiDocUpdate  40: DmAllegatiDocDelete  41: ProfileUpdateProtocollo  42: ProfileDeleted  43: ExternalCall  44: ProfileUndoCheckOut  45: ProfileInserted  46: ProfileLogReaded  47: ProfileUpdate  48: Profile_Field_DocName  49: Profile_Field_Aoo  50: Profile_Field_Numero  51: Profile_Field_DataDoc  52: Profile_Field_Mittente  53: Profile_Field_Destinatario  54: Profile_Field_Cc  55: Profile_Field_CreationDate  56: Profile_Field_Impronta  57: Profile_Field_Device  58: Profile_Field_DataFile  59: Profile_Field_Importante  60: Profile_Field_Revisione  61: Profile_Field_Autore  62: Profile_Field_Protocollo  63: Profile_Field_Anno  64: Profile_Field_Bloccato  65: Profile_Field_Stato  66: Profile_Field_InOut  67: Profile_Field_Scadenza  68: Profile_Field_Flag  69: Profile_Field_WorkFlow  70: Profile_Field_GestRev  71: Profile_Field_EtichettaCd  72: Profile_Field_EtichettaAos  73: Profile_Field_Associazioni  74: Profile_Field_OpenDoc  75: Profile_Field_Allegati  76: Profile_Field_Emergenza  77: Profile_Field_IsAos  78: Profile_Field_EtiReader  79: Profile_Field_ScadAos  80: Profile_Field_Aggiuntivi  81: Profile_Field_DataProt  82: Profile_Field_Compressed  83: ProfileLogMigrated  84: Profile_Field_Originale  85: ProfileSigned  86: ProfileInsertedInFolder  87: ProfileInsertedInFaxOut  88: ProfileInsertedInPratica  89: ProfileInsertedNote  90: LicenseViolated  91: BarcodePrinted  92: WorkflowStarted  93: WorkflowEnded  94: WorkflowEndedForced  95: WorkflowDeleted  96: DmAllegatiDocSignOtpSent  97: DmProfileSignOtpSent  98: ProfileRemovedFromFolder  99: ProfileRemovedFromPratica  100: Dm_Sharing_Insert  101: Dm_Sharing_Update  102: Dm_Sharing_Expiration  103: Dm_Sharing_Read  104: Dm_Sharing_Delete  105: Dm_Sharing_Expiration_NpceOut  106: RemoveDocument  107: Dm_Sharing_Alert  108: Dm_Sharing_MailOut  109: DocumentRemovedFromRelationship  110: DmAssociazioniDelete  111: Dm_Queue_Start  112: Dm_Queue_Change_Progress  113: Dm_Queue_Scheduled  114: Dm_Queue_Terminated  115: Dm_Queue_Cancelled  116: Dm_Queue_Waiting  117: Dm_Queue_Warning  118: Dm_Queue_Info  119: Dm_Instructions_Insert  120: Dm_Instructions_Update  121: Dm_Instructions_Delete  122: Dm_DatiProfilo_Field_Id  123: Dm_DatiProfilo_Field_Valore  124: Dm_DatiProfilo_Field_Contatti  125: Dm_DatiProfilo_Field_Fax  126: Dm_DatiProfilo_Field_Tel  127: Dm_DatiProfilo_Field_Indirizzo  128: Dm_DatiProfilo_Field_Mail  129: Dm_DatiProfilo_Field_Localita  130: Dm_DatiProfilo_Field_Cap  131: Dm_DatiProfilo_Field_Provincia  132: Dm_DatiProfilo_Field_Nazione  133: Dm_DatiProfilo_Field_Contatto  134: Dm_DatiProfilo_Field_Mansione  135: Dm_DatiProfilo_Field_TelNome  136: Dm_DatiProfilo_Field_FaxNome  137: Dm_DatiProfilo_Field_Cell  138: Dm_DatiProfilo_Field_Abitazione  139: Dm_DatiProfilo_Field_Reparto  140: Dm_DatiProfilo_Field_Ufficio  141: Dm_DatiProfilo_Field_Email  142: Dm_DatiProfilo_Field_Riferimento  143: Dm_DatiProfilo_Field_CodFis  144: Dm_DatiProfilo_Field_PartIva  145: Dm_DatiProfilo_Field_Priorita  146: Dm_DatiProfilo_Field_Codice  147: Profile_Field_Senders  148: Dm_Collaboration_Create  149: Dm_Collaboration_ReCollaborate  150: Dm_Collaboration_TakeOff  151: Dm_Collaboration_Delete  152: Profile_Field_DocumentType  153: Profile_Field_Tipo2  154: Profile_Field_Tipo3  155: Dm_Collaboration_Terminate  156: AllegatiDocSigned  157: LogInFailed ")
  public Integer getInfoType() {
    return infoType;
  }

  public void setInfoType(Integer infoType) {
    this.infoType = infoType;
  }

  public LogDTO infoTypeMessage(String infoTypeMessage) {
    this.infoTypeMessage = infoTypeMessage;
    return this;
  }

   /**
   * Message Type
   * @return infoTypeMessage
  **/
  @ApiModelProperty(value = "Message Type")
  public String getInfoTypeMessage() {
    return infoTypeMessage;
  }

  public void setInfoTypeMessage(String infoTypeMessage) {
    this.infoTypeMessage = infoTypeMessage;
  }

  public LogDTO infoInt(Integer infoInt) {
    this.infoInt = infoInt;
    return this;
  }

   /**
   * Information in integer format
   * @return infoInt
  **/
  @ApiModelProperty(value = "Information in integer format")
  public Integer getInfoInt() {
    return infoInt;
  }

  public void setInfoInt(Integer infoInt) {
    this.infoInt = infoInt;
  }

  public LogDTO sessionId(String sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * Session Identifier
   * @return sessionId
  **/
  @ApiModelProperty(value = "Session Identifier")
  public String getSessionId() {
    return sessionId;
  }

  public void setSessionId(String sessionId) {
    this.sessionId = sessionId;
  }

  public LogDTO softwareName(String softwareName) {
    this.softwareName = softwareName;
    return this;
  }

   /**
   * Software Name
   * @return softwareName
  **/
  @ApiModelProperty(value = "Software Name")
  public String getSoftwareName() {
    return softwareName;
  }

  public void setSoftwareName(String softwareName) {
    this.softwareName = softwareName;
  }

  public LogDTO softwareType(String softwareType) {
    this.softwareType = softwareType;
    return this;
  }

   /**
   * Software Type
   * @return softwareType
  **/
  @ApiModelProperty(value = "Software Type")
  public String getSoftwareType() {
    return softwareType;
  }

  public void setSoftwareType(String softwareType) {
    this.softwareType = softwareType;
  }

  public LogDTO infoString(String infoString) {
    this.infoString = infoString;
    return this;
  }

   /**
   * Information in string format
   * @return infoString
  **/
  @ApiModelProperty(value = "Information in string format")
  public String getInfoString() {
    return infoString;
  }

  public void setInfoString(String infoString) {
    this.infoString = infoString;
  }

  public LogDTO parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Identifier of the reference object
   * @return parentId
  **/
  @ApiModelProperty(value = "Identifier of the reference object")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public LogDTO logKind(Integer logKind) {
    this.logKind = logKind;
    return this;
  }

   /**
   * Possible values:  0: None  1: Profile  2: Sharing  3: Queue  4: Instruction  5: Collaboration 
   * @return logKind
  **/
  @ApiModelProperty(value = "Possible values:  0: None  1: Profile  2: Sharing  3: Queue  4: Instruction  5: Collaboration ")
  public Integer getLogKind() {
    return logKind;
  }

  public void setLogKind(Integer logKind) {
    this.logKind = logKind;
  }

  public LogDTO historyInt(Integer historyInt) {
    this.historyInt = historyInt;
    return this;
  }

   /**
   * Integer for Deleting Rules
   * @return historyInt
  **/
  @ApiModelProperty(value = "Integer for Deleting Rules")
  public Integer getHistoryInt() {
    return historyInt;
  }

  public void setHistoryInt(Integer historyInt) {
    this.historyInt = historyInt;
  }

  public LogDTO historyString(String historyString) {
    this.historyString = historyString;
    return this;
  }

   /**
   * String for Deleting Rules
   * @return historyString
  **/
  @ApiModelProperty(value = "String for Deleting Rules")
  public String getHistoryString() {
    return historyString;
  }

  public void setHistoryString(String historyString) {
    this.historyString = historyString;
  }

  public LogDTO childs(List<LogDTO> childs) {
    this.childs = childs;
    return this;
  }

  public LogDTO addChildsItem(LogDTO childsItem) {
    if (this.childs == null) {
      this.childs = new ArrayList<LogDTO>();
    }
    this.childs.add(childsItem);
    return this;
  }

   /**
   * Sublevel Items
   * @return childs
  **/
  @ApiModelProperty(value = "Sublevel Items")
  public List<LogDTO> getChilds() {
    return childs;
  }

  public void setChilds(List<LogDTO> childs) {
    this.childs = childs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogDTO logDTO = (LogDTO) o;
    return Objects.equals(this.id, logDTO.id) &&
        Objects.equals(this.logLevel, logDTO.logLevel) &&
        Objects.equals(this.logMessage, logDTO.logMessage) &&
        Objects.equals(this.logDate, logDTO.logDate) &&
        Objects.equals(this.userId, logDTO.userId) &&
        Objects.equals(this.userNameComplete, logDTO.userNameComplete) &&
        Objects.equals(this.ipLogger, logDTO.ipLogger) &&
        Objects.equals(this.infoType, logDTO.infoType) &&
        Objects.equals(this.infoTypeMessage, logDTO.infoTypeMessage) &&
        Objects.equals(this.infoInt, logDTO.infoInt) &&
        Objects.equals(this.sessionId, logDTO.sessionId) &&
        Objects.equals(this.softwareName, logDTO.softwareName) &&
        Objects.equals(this.softwareType, logDTO.softwareType) &&
        Objects.equals(this.infoString, logDTO.infoString) &&
        Objects.equals(this.parentId, logDTO.parentId) &&
        Objects.equals(this.logKind, logDTO.logKind) &&
        Objects.equals(this.historyInt, logDTO.historyInt) &&
        Objects.equals(this.historyString, logDTO.historyString) &&
        Objects.equals(this.childs, logDTO.childs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, logLevel, logMessage, logDate, userId, userNameComplete, ipLogger, infoType, infoTypeMessage, infoInt, sessionId, softwareName, softwareType, infoString, parentId, logKind, historyInt, historyString, childs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    logLevel: ").append(toIndentedString(logLevel)).append("\n");
    sb.append("    logMessage: ").append(toIndentedString(logMessage)).append("\n");
    sb.append("    logDate: ").append(toIndentedString(logDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userNameComplete: ").append(toIndentedString(userNameComplete)).append("\n");
    sb.append("    ipLogger: ").append(toIndentedString(ipLogger)).append("\n");
    sb.append("    infoType: ").append(toIndentedString(infoType)).append("\n");
    sb.append("    infoTypeMessage: ").append(toIndentedString(infoTypeMessage)).append("\n");
    sb.append("    infoInt: ").append(toIndentedString(infoInt)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    softwareName: ").append(toIndentedString(softwareName)).append("\n");
    sb.append("    softwareType: ").append(toIndentedString(softwareType)).append("\n");
    sb.append("    infoString: ").append(toIndentedString(infoString)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    logKind: ").append(toIndentedString(logKind)).append("\n");
    sb.append("    historyInt: ").append(toIndentedString(historyInt)).append("\n");
    sb.append("    historyString: ").append(toIndentedString(historyString)).append("\n");
    sb.append("    childs: ").append(toIndentedString(childs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

