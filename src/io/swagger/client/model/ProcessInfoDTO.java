/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AttachmentWorkInfoDTO;
import io.swagger.client.model.ChronoInfoDTO;
import io.swagger.client.model.DocumentWorkInfoDTO;
import io.swagger.client.model.NoteWorkInfoDTO;
import io.swagger.client.model.ProcessInfoVariableDTO;
import io.swagger.client.model.ProfessionalRoleInfoDTO;
import io.swagger.client.model.TaskInfoDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ProcessInfoDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class ProcessInfoDTO {
  @SerializedName("taskInfoList")
  private List<TaskInfoDTO> taskInfoList = null;

  @SerializedName("documentInfoList")
  private List<DocumentWorkInfoDTO> documentInfoList = null;

  @SerializedName("noteInfoList")
  private List<NoteWorkInfoDTO> noteInfoList = null;

  @SerializedName("attachmentInfoList")
  private List<AttachmentWorkInfoDTO> attachmentInfoList = null;

  @SerializedName("professionalRoleInfoList")
  private List<ProfessionalRoleInfoDTO> professionalRoleInfoList = null;

  @SerializedName("chronoInfoList")
  private List<ChronoInfoDTO> chronoInfoList = null;

  @SerializedName("variableInfo")
  private ProcessInfoVariableDTO variableInfo = null;

  public ProcessInfoDTO taskInfoList(List<TaskInfoDTO> taskInfoList) {
    this.taskInfoList = taskInfoList;
    return this;
  }

  public ProcessInfoDTO addTaskInfoListItem(TaskInfoDTO taskInfoListItem) {
    if (this.taskInfoList == null) {
      this.taskInfoList = new ArrayList<TaskInfoDTO>();
    }
    this.taskInfoList.add(taskInfoListItem);
    return this;
  }

   /**
   * Get taskInfoList
   * @return taskInfoList
  **/
  @ApiModelProperty(value = "")
  public List<TaskInfoDTO> getTaskInfoList() {
    return taskInfoList;
  }

  public void setTaskInfoList(List<TaskInfoDTO> taskInfoList) {
    this.taskInfoList = taskInfoList;
  }

  public ProcessInfoDTO documentInfoList(List<DocumentWorkInfoDTO> documentInfoList) {
    this.documentInfoList = documentInfoList;
    return this;
  }

  public ProcessInfoDTO addDocumentInfoListItem(DocumentWorkInfoDTO documentInfoListItem) {
    if (this.documentInfoList == null) {
      this.documentInfoList = new ArrayList<DocumentWorkInfoDTO>();
    }
    this.documentInfoList.add(documentInfoListItem);
    return this;
  }

   /**
   * Get documentInfoList
   * @return documentInfoList
  **/
  @ApiModelProperty(value = "")
  public List<DocumentWorkInfoDTO> getDocumentInfoList() {
    return documentInfoList;
  }

  public void setDocumentInfoList(List<DocumentWorkInfoDTO> documentInfoList) {
    this.documentInfoList = documentInfoList;
  }

  public ProcessInfoDTO noteInfoList(List<NoteWorkInfoDTO> noteInfoList) {
    this.noteInfoList = noteInfoList;
    return this;
  }

  public ProcessInfoDTO addNoteInfoListItem(NoteWorkInfoDTO noteInfoListItem) {
    if (this.noteInfoList == null) {
      this.noteInfoList = new ArrayList<NoteWorkInfoDTO>();
    }
    this.noteInfoList.add(noteInfoListItem);
    return this;
  }

   /**
   * Get noteInfoList
   * @return noteInfoList
  **/
  @ApiModelProperty(value = "")
  public List<NoteWorkInfoDTO> getNoteInfoList() {
    return noteInfoList;
  }

  public void setNoteInfoList(List<NoteWorkInfoDTO> noteInfoList) {
    this.noteInfoList = noteInfoList;
  }

  public ProcessInfoDTO attachmentInfoList(List<AttachmentWorkInfoDTO> attachmentInfoList) {
    this.attachmentInfoList = attachmentInfoList;
    return this;
  }

  public ProcessInfoDTO addAttachmentInfoListItem(AttachmentWorkInfoDTO attachmentInfoListItem) {
    if (this.attachmentInfoList == null) {
      this.attachmentInfoList = new ArrayList<AttachmentWorkInfoDTO>();
    }
    this.attachmentInfoList.add(attachmentInfoListItem);
    return this;
  }

   /**
   * Get attachmentInfoList
   * @return attachmentInfoList
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentWorkInfoDTO> getAttachmentInfoList() {
    return attachmentInfoList;
  }

  public void setAttachmentInfoList(List<AttachmentWorkInfoDTO> attachmentInfoList) {
    this.attachmentInfoList = attachmentInfoList;
  }

  public ProcessInfoDTO professionalRoleInfoList(List<ProfessionalRoleInfoDTO> professionalRoleInfoList) {
    this.professionalRoleInfoList = professionalRoleInfoList;
    return this;
  }

  public ProcessInfoDTO addProfessionalRoleInfoListItem(ProfessionalRoleInfoDTO professionalRoleInfoListItem) {
    if (this.professionalRoleInfoList == null) {
      this.professionalRoleInfoList = new ArrayList<ProfessionalRoleInfoDTO>();
    }
    this.professionalRoleInfoList.add(professionalRoleInfoListItem);
    return this;
  }

   /**
   * Get professionalRoleInfoList
   * @return professionalRoleInfoList
  **/
  @ApiModelProperty(value = "")
  public List<ProfessionalRoleInfoDTO> getProfessionalRoleInfoList() {
    return professionalRoleInfoList;
  }

  public void setProfessionalRoleInfoList(List<ProfessionalRoleInfoDTO> professionalRoleInfoList) {
    this.professionalRoleInfoList = professionalRoleInfoList;
  }

  public ProcessInfoDTO chronoInfoList(List<ChronoInfoDTO> chronoInfoList) {
    this.chronoInfoList = chronoInfoList;
    return this;
  }

  public ProcessInfoDTO addChronoInfoListItem(ChronoInfoDTO chronoInfoListItem) {
    if (this.chronoInfoList == null) {
      this.chronoInfoList = new ArrayList<ChronoInfoDTO>();
    }
    this.chronoInfoList.add(chronoInfoListItem);
    return this;
  }

   /**
   * Get chronoInfoList
   * @return chronoInfoList
  **/
  @ApiModelProperty(value = "")
  public List<ChronoInfoDTO> getChronoInfoList() {
    return chronoInfoList;
  }

  public void setChronoInfoList(List<ChronoInfoDTO> chronoInfoList) {
    this.chronoInfoList = chronoInfoList;
  }

  public ProcessInfoDTO variableInfo(ProcessInfoVariableDTO variableInfo) {
    this.variableInfo = variableInfo;
    return this;
  }

   /**
   * Get variableInfo
   * @return variableInfo
  **/
  @ApiModelProperty(value = "")
  public ProcessInfoVariableDTO getVariableInfo() {
    return variableInfo;
  }

  public void setVariableInfo(ProcessInfoVariableDTO variableInfo) {
    this.variableInfo = variableInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessInfoDTO processInfoDTO = (ProcessInfoDTO) o;
    return Objects.equals(this.taskInfoList, processInfoDTO.taskInfoList) &&
        Objects.equals(this.documentInfoList, processInfoDTO.documentInfoList) &&
        Objects.equals(this.noteInfoList, processInfoDTO.noteInfoList) &&
        Objects.equals(this.attachmentInfoList, processInfoDTO.attachmentInfoList) &&
        Objects.equals(this.professionalRoleInfoList, processInfoDTO.professionalRoleInfoList) &&
        Objects.equals(this.chronoInfoList, processInfoDTO.chronoInfoList) &&
        Objects.equals(this.variableInfo, processInfoDTO.variableInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskInfoList, documentInfoList, noteInfoList, attachmentInfoList, professionalRoleInfoList, chronoInfoList, variableInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessInfoDTO {\n");
    
    sb.append("    taskInfoList: ").append(toIndentedString(taskInfoList)).append("\n");
    sb.append("    documentInfoList: ").append(toIndentedString(documentInfoList)).append("\n");
    sb.append("    noteInfoList: ").append(toIndentedString(noteInfoList)).append("\n");
    sb.append("    attachmentInfoList: ").append(toIndentedString(attachmentInfoList)).append("\n");
    sb.append("    professionalRoleInfoList: ").append(toIndentedString(professionalRoleInfoList)).append("\n");
    sb.append("    chronoInfoList: ").append(toIndentedString(chronoInfoList)).append("\n");
    sb.append("    variableInfo: ").append(toIndentedString(variableInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

