/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FolderArchiveModeRule;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of information for profiling in folder
 */
@ApiModel(description = "Class of information for profiling in folder")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class FolderArchiveModeInfo {
  @SerializedName("folderId")
  private Integer folderId = null;

  @SerializedName("folderName")
  private String folderName = null;

  @SerializedName("rules")
  private List<FolderArchiveModeRule> rules = null;

  @SerializedName("archiveMode")
  private Integer archiveMode = null;

  public FolderArchiveModeInfo folderId(Integer folderId) {
    this.folderId = folderId;
    return this;
  }

   /**
   * Folder Identifier
   * @return folderId
  **/
  @ApiModelProperty(value = "Folder Identifier")
  public Integer getFolderId() {
    return folderId;
  }

  public void setFolderId(Integer folderId) {
    this.folderId = folderId;
  }

  public FolderArchiveModeInfo folderName(String folderName) {
    this.folderName = folderName;
    return this;
  }

   /**
   * Folder Name
   * @return folderName
  **/
  @ApiModelProperty(value = "Folder Name")
  public String getFolderName() {
    return folderName;
  }

  public void setFolderName(String folderName) {
    this.folderName = folderName;
  }

  public FolderArchiveModeInfo rules(List<FolderArchiveModeRule> rules) {
    this.rules = rules;
    return this;
  }

  public FolderArchiveModeInfo addRulesItem(FolderArchiveModeRule rulesItem) {
    if (this.rules == null) {
      this.rules = new ArrayList<FolderArchiveModeRule>();
    }
    this.rules.add(rulesItem);
    return this;
  }

   /**
   * Rules
   * @return rules
  **/
  @ApiModelProperty(value = "Rules")
  public List<FolderArchiveModeRule> getRules() {
    return rules;
  }

  public void setRules(List<FolderArchiveModeRule> rules) {
    this.rules = rules;
  }

  public FolderArchiveModeInfo archiveMode(Integer archiveMode) {
    this.archiveMode = archiveMode;
    return this;
  }

   /**
   * Possible values:  0: None  1: AutoWithDefaultProfile  2: ManualWithMask 
   * @return archiveMode
  **/
  @ApiModelProperty(value = "Possible values:  0: None  1: AutoWithDefaultProfile  2: ManualWithMask ")
  public Integer getArchiveMode() {
    return archiveMode;
  }

  public void setArchiveMode(Integer archiveMode) {
    this.archiveMode = archiveMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FolderArchiveModeInfo folderArchiveModeInfo = (FolderArchiveModeInfo) o;
    return Objects.equals(this.folderId, folderArchiveModeInfo.folderId) &&
        Objects.equals(this.folderName, folderArchiveModeInfo.folderName) &&
        Objects.equals(this.rules, folderArchiveModeInfo.rules) &&
        Objects.equals(this.archiveMode, folderArchiveModeInfo.archiveMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(folderId, folderName, rules, archiveMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FolderArchiveModeInfo {\n");
    
    sb.append("    folderId: ").append(toIndentedString(folderId)).append("\n");
    sb.append("    folderName: ").append(toIndentedString(folderName)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    archiveMode: ").append(toIndentedString(archiveMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

