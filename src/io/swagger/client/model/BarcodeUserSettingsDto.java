/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Class of barcode settings
 */
@ApiModel(description = "Class of barcode settings")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class BarcodeUserSettingsDto {
  @SerializedName("activateUserSettings")
  private Boolean activateUserSettings = null;

  @SerializedName("barcodePrintMode")
  private Integer barcodePrintMode = null;

  @SerializedName("barcodePrintSettings")
  private String barcodePrintSettings = null;

  @SerializedName("barcodeAttachmentPrintOffsetX")
  private Integer barcodeAttachmentPrintOffsetX = null;

  @SerializedName("barcodeAttachmentPrintOffsetY")
  private Integer barcodeAttachmentPrintOffsetY = null;

  @SerializedName("printerMode")
  private Integer printerMode = null;

  public BarcodeUserSettingsDto activateUserSettings(Boolean activateUserSettings) {
    this.activateUserSettings = activateUserSettings;
    return this;
  }

   /**
   * Activate User
   * @return activateUserSettings
  **/
  @ApiModelProperty(value = "Activate User")
  public Boolean isActivateUserSettings() {
    return activateUserSettings;
  }

  public void setActivateUserSettings(Boolean activateUserSettings) {
    this.activateUserSettings = activateUserSettings;
  }

  public BarcodeUserSettingsDto barcodePrintMode(Integer barcodePrintMode) {
    this.barcodePrintMode = barcodePrintMode;
    return this;
  }

   /**
   * Possible values:  0: Client  1: Server  2: ClientFile  3: TerminalServer 
   * @return barcodePrintMode
  **/
  @ApiModelProperty(value = "Possible values:  0: Client  1: Server  2: ClientFile  3: TerminalServer ")
  public Integer getBarcodePrintMode() {
    return barcodePrintMode;
  }

  public void setBarcodePrintMode(Integer barcodePrintMode) {
    this.barcodePrintMode = barcodePrintMode;
  }

  public BarcodeUserSettingsDto barcodePrintSettings(String barcodePrintSettings) {
    this.barcodePrintSettings = barcodePrintSettings;
    return this;
  }

   /**
   * Print Settings
   * @return barcodePrintSettings
  **/
  @ApiModelProperty(value = "Print Settings")
  public String getBarcodePrintSettings() {
    return barcodePrintSettings;
  }

  public void setBarcodePrintSettings(String barcodePrintSettings) {
    this.barcodePrintSettings = barcodePrintSettings;
  }

  public BarcodeUserSettingsDto barcodeAttachmentPrintOffsetX(Integer barcodeAttachmentPrintOffsetX) {
    this.barcodeAttachmentPrintOffsetX = barcodeAttachmentPrintOffsetX;
    return this;
  }

   /**
   * X Offset
   * @return barcodeAttachmentPrintOffsetX
  **/
  @ApiModelProperty(value = "X Offset")
  public Integer getBarcodeAttachmentPrintOffsetX() {
    return barcodeAttachmentPrintOffsetX;
  }

  public void setBarcodeAttachmentPrintOffsetX(Integer barcodeAttachmentPrintOffsetX) {
    this.barcodeAttachmentPrintOffsetX = barcodeAttachmentPrintOffsetX;
  }

  public BarcodeUserSettingsDto barcodeAttachmentPrintOffsetY(Integer barcodeAttachmentPrintOffsetY) {
    this.barcodeAttachmentPrintOffsetY = barcodeAttachmentPrintOffsetY;
    return this;
  }

   /**
   * Y Offset
   * @return barcodeAttachmentPrintOffsetY
  **/
  @ApiModelProperty(value = "Y Offset")
  public Integer getBarcodeAttachmentPrintOffsetY() {
    return barcodeAttachmentPrintOffsetY;
  }

  public void setBarcodeAttachmentPrintOffsetY(Integer barcodeAttachmentPrintOffsetY) {
    this.barcodeAttachmentPrintOffsetY = barcodeAttachmentPrintOffsetY;
  }

  public BarcodeUserSettingsDto printerMode(Integer printerMode) {
    this.printerMode = printerMode;
    return this;
  }

   /**
   * Possible values:  0: EPL2  1: POS  2: OTHER 
   * @return printerMode
  **/
  @ApiModelProperty(value = "Possible values:  0: EPL2  1: POS  2: OTHER ")
  public Integer getPrinterMode() {
    return printerMode;
  }

  public void setPrinterMode(Integer printerMode) {
    this.printerMode = printerMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BarcodeUserSettingsDto barcodeUserSettingsDto = (BarcodeUserSettingsDto) o;
    return Objects.equals(this.activateUserSettings, barcodeUserSettingsDto.activateUserSettings) &&
        Objects.equals(this.barcodePrintMode, barcodeUserSettingsDto.barcodePrintMode) &&
        Objects.equals(this.barcodePrintSettings, barcodeUserSettingsDto.barcodePrintSettings) &&
        Objects.equals(this.barcodeAttachmentPrintOffsetX, barcodeUserSettingsDto.barcodeAttachmentPrintOffsetX) &&
        Objects.equals(this.barcodeAttachmentPrintOffsetY, barcodeUserSettingsDto.barcodeAttachmentPrintOffsetY) &&
        Objects.equals(this.printerMode, barcodeUserSettingsDto.printerMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activateUserSettings, barcodePrintMode, barcodePrintSettings, barcodeAttachmentPrintOffsetX, barcodeAttachmentPrintOffsetY, printerMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BarcodeUserSettingsDto {\n");
    
    sb.append("    activateUserSettings: ").append(toIndentedString(activateUserSettings)).append("\n");
    sb.append("    barcodePrintMode: ").append(toIndentedString(barcodePrintMode)).append("\n");
    sb.append("    barcodePrintSettings: ").append(toIndentedString(barcodePrintSettings)).append("\n");
    sb.append("    barcodeAttachmentPrintOffsetX: ").append(toIndentedString(barcodeAttachmentPrintOffsetX)).append("\n");
    sb.append("    barcodeAttachmentPrintOffsetY: ").append(toIndentedString(barcodeAttachmentPrintOffsetY)).append("\n");
    sb.append("    printerMode: ").append(toIndentedString(printerMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

