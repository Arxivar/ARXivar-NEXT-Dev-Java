/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Document operation DTO.
 */
@ApiModel(description = "Document operation DTO.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class TaskWorkDocumentOperationDTO {
  @SerializedName("id")
  private String id = null;

  @SerializedName("taskWorkId")
  private Integer taskWorkId = null;

  @SerializedName("processId")
  private Integer processId = null;

  @SerializedName("allowNewDocument")
  private Boolean allowNewDocument = null;

  @SerializedName("allowDocumentSelection")
  private Boolean allowDocumentSelection = null;

  @SerializedName("viewId")
  private String viewId = null;

  @SerializedName("isRequired")
  private Boolean isRequired = null;

  @SerializedName("taskWorkDocumentOperationType")
  private Integer taskWorkDocumentOperationType = null;

  @SerializedName("editBuffer")
  private Boolean editBuffer = null;

  @SerializedName("documentTypeType1")
  private Integer documentTypeType1 = null;

  @SerializedName("documentTypeType2")
  private Integer documentTypeType2 = null;

  @SerializedName("documentTypeType3")
  private Integer documentTypeType3 = null;

  @SerializedName("moduleId")
  private Integer moduleId = null;

  @SerializedName("toAssociates")
  private Boolean toAssociates = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("maskId")
  private String maskId = null;

  @SerializedName("toSend")
  private Boolean toSend = null;

  @SerializedName("fromFileSystem")
  private Boolean fromFileSystem = null;

  @SerializedName("fromScanner")
  private Boolean fromScanner = null;

  @SerializedName("isExecuted")
  private Boolean isExecuted = null;

  @SerializedName("relatedBinder")
  private String relatedBinder = null;

  @SerializedName("taskWorkDocumentOperationRealtionMode")
  private Integer taskWorkDocumentOperationRealtionMode = null;

  public TaskWorkDocumentOperationDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Operation Id.
   * @return id
  **/
  @ApiModelProperty(value = "Operation Id.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TaskWorkDocumentOperationDTO taskWorkId(Integer taskWorkId) {
    this.taskWorkId = taskWorkId;
    return this;
  }

   /**
   * TaskWork Id.
   * @return taskWorkId
  **/
  @ApiModelProperty(value = "TaskWork Id.")
  public Integer getTaskWorkId() {
    return taskWorkId;
  }

  public void setTaskWorkId(Integer taskWorkId) {
    this.taskWorkId = taskWorkId;
  }

  public TaskWorkDocumentOperationDTO processId(Integer processId) {
    this.processId = processId;
    return this;
  }

   /**
   * Process Id.
   * @return processId
  **/
  @ApiModelProperty(value = "Process Id.")
  public Integer getProcessId() {
    return processId;
  }

  public void setProcessId(Integer processId) {
    this.processId = processId;
  }

  public TaskWorkDocumentOperationDTO allowNewDocument(Boolean allowNewDocument) {
    this.allowNewDocument = allowNewDocument;
    return this;
  }

   /**
   * Archiviation enabled.
   * @return allowNewDocument
  **/
  @ApiModelProperty(value = "Archiviation enabled.")
  public Boolean isAllowNewDocument() {
    return allowNewDocument;
  }

  public void setAllowNewDocument(Boolean allowNewDocument) {
    this.allowNewDocument = allowNewDocument;
  }

  public TaskWorkDocumentOperationDTO allowDocumentSelection(Boolean allowDocumentSelection) {
    this.allowDocumentSelection = allowDocumentSelection;
    return this;
  }

   /**
   * Selection enabled.
   * @return allowDocumentSelection
  **/
  @ApiModelProperty(value = "Selection enabled.")
  public Boolean isAllowDocumentSelection() {
    return allowDocumentSelection;
  }

  public void setAllowDocumentSelection(Boolean allowDocumentSelection) {
    this.allowDocumentSelection = allowDocumentSelection;
  }

  public TaskWorkDocumentOperationDTO viewId(String viewId) {
    this.viewId = viewId;
    return this;
  }

   /**
   * Indicates the id of the view to use for the search
   * @return viewId
  **/
  @ApiModelProperty(value = "Indicates the id of the view to use for the search")
  public String getViewId() {
    return viewId;
  }

  public void setViewId(String viewId) {
    this.viewId = viewId;
  }

  public TaskWorkDocumentOperationDTO isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

   /**
   * Required.
   * @return isRequired
  **/
  @ApiModelProperty(value = "Required.")
  public Boolean isIsRequired() {
    return isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }

  public TaskWorkDocumentOperationDTO taskWorkDocumentOperationType(Integer taskWorkDocumentOperationType) {
    this.taskWorkDocumentOperationType = taskWorkDocumentOperationType;
    return this;
  }

   /**
   * Possible values:  0: Attachment  1: PrincipalDocument  2: SecondaryDocument 
   * @return taskWorkDocumentOperationType
  **/
  @ApiModelProperty(value = "Possible values:  0: Attachment  1: PrincipalDocument  2: SecondaryDocument ")
  public Integer getTaskWorkDocumentOperationType() {
    return taskWorkDocumentOperationType;
  }

  public void setTaskWorkDocumentOperationType(Integer taskWorkDocumentOperationType) {
    this.taskWorkDocumentOperationType = taskWorkDocumentOperationType;
  }

  public TaskWorkDocumentOperationDTO editBuffer(Boolean editBuffer) {
    this.editBuffer = editBuffer;
    return this;
  }

   /**
   * Edit buffer copy.
   * @return editBuffer
  **/
  @ApiModelProperty(value = "Edit buffer copy.")
  public Boolean isEditBuffer() {
    return editBuffer;
  }

  public void setEditBuffer(Boolean editBuffer) {
    this.editBuffer = editBuffer;
  }

  public TaskWorkDocumentOperationDTO documentTypeType1(Integer documentTypeType1) {
    this.documentTypeType1 = documentTypeType1;
    return this;
  }

   /**
   * DocumentType Type one.
   * @return documentTypeType1
  **/
  @ApiModelProperty(value = "DocumentType Type one.")
  public Integer getDocumentTypeType1() {
    return documentTypeType1;
  }

  public void setDocumentTypeType1(Integer documentTypeType1) {
    this.documentTypeType1 = documentTypeType1;
  }

  public TaskWorkDocumentOperationDTO documentTypeType2(Integer documentTypeType2) {
    this.documentTypeType2 = documentTypeType2;
    return this;
  }

   /**
   * DocumentType Type two.
   * @return documentTypeType2
  **/
  @ApiModelProperty(value = "DocumentType Type two.")
  public Integer getDocumentTypeType2() {
    return documentTypeType2;
  }

  public void setDocumentTypeType2(Integer documentTypeType2) {
    this.documentTypeType2 = documentTypeType2;
  }

  public TaskWorkDocumentOperationDTO documentTypeType3(Integer documentTypeType3) {
    this.documentTypeType3 = documentTypeType3;
    return this;
  }

   /**
   * DocumentType Type three.
   * @return documentTypeType3
  **/
  @ApiModelProperty(value = "DocumentType Type three.")
  public Integer getDocumentTypeType3() {
    return documentTypeType3;
  }

  public void setDocumentTypeType3(Integer documentTypeType3) {
    this.documentTypeType3 = documentTypeType3;
  }

  public TaskWorkDocumentOperationDTO moduleId(Integer moduleId) {
    this.moduleId = moduleId;
    return this;
  }

   /**
   * Model Id.
   * @return moduleId
  **/
  @ApiModelProperty(value = "Model Id.")
  public Integer getModuleId() {
    return moduleId;
  }

  public void setModuleId(Integer moduleId) {
    this.moduleId = moduleId;
  }

  public TaskWorkDocumentOperationDTO toAssociates(Boolean toAssociates) {
    this.toAssociates = toAssociates;
    return this;
  }

   /**
   * Associates enabled.
   * @return toAssociates
  **/
  @ApiModelProperty(value = "Associates enabled.")
  public Boolean isToAssociates() {
    return toAssociates;
  }

  public void setToAssociates(Boolean toAssociates) {
    this.toAssociates = toAssociates;
  }

  public TaskWorkDocumentOperationDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Operation description.
   * @return description
  **/
  @ApiModelProperty(value = "Operation description.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TaskWorkDocumentOperationDTO maskId(String maskId) {
    this.maskId = maskId;
    return this;
  }

   /**
   * Mask Id.
   * @return maskId
  **/
  @ApiModelProperty(value = "Mask Id.")
  public String getMaskId() {
    return maskId;
  }

  public void setMaskId(String maskId) {
    this.maskId = maskId;
  }

  public TaskWorkDocumentOperationDTO toSend(Boolean toSend) {
    this.toSend = toSend;
    return this;
  }

   /**
   * Send enabled.
   * @return toSend
  **/
  @ApiModelProperty(value = "Send enabled.")
  public Boolean isToSend() {
    return toSend;
  }

  public void setToSend(Boolean toSend) {
    this.toSend = toSend;
  }

  public TaskWorkDocumentOperationDTO fromFileSystem(Boolean fromFileSystem) {
    this.fromFileSystem = fromFileSystem;
    return this;
  }

   /**
   * FileSystem selection.
   * @return fromFileSystem
  **/
  @ApiModelProperty(value = "FileSystem selection.")
  public Boolean isFromFileSystem() {
    return fromFileSystem;
  }

  public void setFromFileSystem(Boolean fromFileSystem) {
    this.fromFileSystem = fromFileSystem;
  }

  public TaskWorkDocumentOperationDTO fromScanner(Boolean fromScanner) {
    this.fromScanner = fromScanner;
    return this;
  }

   /**
   * Scanner selection.
   * @return fromScanner
  **/
  @ApiModelProperty(value = "Scanner selection.")
  public Boolean isFromScanner() {
    return fromScanner;
  }

  public void setFromScanner(Boolean fromScanner) {
    this.fromScanner = fromScanner;
  }

  public TaskWorkDocumentOperationDTO isExecuted(Boolean isExecuted) {
    this.isExecuted = isExecuted;
    return this;
  }

   /**
   * Operation Executed.
   * @return isExecuted
  **/
  @ApiModelProperty(value = "Operation Executed.")
  public Boolean isIsExecuted() {
    return isExecuted;
  }

  public void setIsExecuted(Boolean isExecuted) {
    this.isExecuted = isExecuted;
  }

  public TaskWorkDocumentOperationDTO relatedBinder(String relatedBinder) {
    this.relatedBinder = relatedBinder;
    return this;
  }

   /**
   * Related binder id
   * @return relatedBinder
  **/
  @ApiModelProperty(value = "Related binder id")
  public String getRelatedBinder() {
    return relatedBinder;
  }

  public void setRelatedBinder(String relatedBinder) {
    this.relatedBinder = relatedBinder;
  }

  public TaskWorkDocumentOperationDTO taskWorkDocumentOperationRealtionMode(Integer taskWorkDocumentOperationRealtionMode) {
    this.taskWorkDocumentOperationRealtionMode = taskWorkDocumentOperationRealtionMode;
    return this;
  }

   /**
   * Possible values:  0: AsChild  1: AsFather  -1: None 
   * @return taskWorkDocumentOperationRealtionMode
  **/
  @ApiModelProperty(value = "Possible values:  0: AsChild  1: AsFather  -1: None ")
  public Integer getTaskWorkDocumentOperationRealtionMode() {
    return taskWorkDocumentOperationRealtionMode;
  }

  public void setTaskWorkDocumentOperationRealtionMode(Integer taskWorkDocumentOperationRealtionMode) {
    this.taskWorkDocumentOperationRealtionMode = taskWorkDocumentOperationRealtionMode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskWorkDocumentOperationDTO taskWorkDocumentOperationDTO = (TaskWorkDocumentOperationDTO) o;
    return Objects.equals(this.id, taskWorkDocumentOperationDTO.id) &&
        Objects.equals(this.taskWorkId, taskWorkDocumentOperationDTO.taskWorkId) &&
        Objects.equals(this.processId, taskWorkDocumentOperationDTO.processId) &&
        Objects.equals(this.allowNewDocument, taskWorkDocumentOperationDTO.allowNewDocument) &&
        Objects.equals(this.allowDocumentSelection, taskWorkDocumentOperationDTO.allowDocumentSelection) &&
        Objects.equals(this.viewId, taskWorkDocumentOperationDTO.viewId) &&
        Objects.equals(this.isRequired, taskWorkDocumentOperationDTO.isRequired) &&
        Objects.equals(this.taskWorkDocumentOperationType, taskWorkDocumentOperationDTO.taskWorkDocumentOperationType) &&
        Objects.equals(this.editBuffer, taskWorkDocumentOperationDTO.editBuffer) &&
        Objects.equals(this.documentTypeType1, taskWorkDocumentOperationDTO.documentTypeType1) &&
        Objects.equals(this.documentTypeType2, taskWorkDocumentOperationDTO.documentTypeType2) &&
        Objects.equals(this.documentTypeType3, taskWorkDocumentOperationDTO.documentTypeType3) &&
        Objects.equals(this.moduleId, taskWorkDocumentOperationDTO.moduleId) &&
        Objects.equals(this.toAssociates, taskWorkDocumentOperationDTO.toAssociates) &&
        Objects.equals(this.description, taskWorkDocumentOperationDTO.description) &&
        Objects.equals(this.maskId, taskWorkDocumentOperationDTO.maskId) &&
        Objects.equals(this.toSend, taskWorkDocumentOperationDTO.toSend) &&
        Objects.equals(this.fromFileSystem, taskWorkDocumentOperationDTO.fromFileSystem) &&
        Objects.equals(this.fromScanner, taskWorkDocumentOperationDTO.fromScanner) &&
        Objects.equals(this.isExecuted, taskWorkDocumentOperationDTO.isExecuted) &&
        Objects.equals(this.relatedBinder, taskWorkDocumentOperationDTO.relatedBinder) &&
        Objects.equals(this.taskWorkDocumentOperationRealtionMode, taskWorkDocumentOperationDTO.taskWorkDocumentOperationRealtionMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, taskWorkId, processId, allowNewDocument, allowDocumentSelection, viewId, isRequired, taskWorkDocumentOperationType, editBuffer, documentTypeType1, documentTypeType2, documentTypeType3, moduleId, toAssociates, description, maskId, toSend, fromFileSystem, fromScanner, isExecuted, relatedBinder, taskWorkDocumentOperationRealtionMode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskWorkDocumentOperationDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    taskWorkId: ").append(toIndentedString(taskWorkId)).append("\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    allowNewDocument: ").append(toIndentedString(allowNewDocument)).append("\n");
    sb.append("    allowDocumentSelection: ").append(toIndentedString(allowDocumentSelection)).append("\n");
    sb.append("    viewId: ").append(toIndentedString(viewId)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    taskWorkDocumentOperationType: ").append(toIndentedString(taskWorkDocumentOperationType)).append("\n");
    sb.append("    editBuffer: ").append(toIndentedString(editBuffer)).append("\n");
    sb.append("    documentTypeType1: ").append(toIndentedString(documentTypeType1)).append("\n");
    sb.append("    documentTypeType2: ").append(toIndentedString(documentTypeType2)).append("\n");
    sb.append("    documentTypeType3: ").append(toIndentedString(documentTypeType3)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    toAssociates: ").append(toIndentedString(toAssociates)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    maskId: ").append(toIndentedString(maskId)).append("\n");
    sb.append("    toSend: ").append(toIndentedString(toSend)).append("\n");
    sb.append("    fromFileSystem: ").append(toIndentedString(fromFileSystem)).append("\n");
    sb.append("    fromScanner: ").append(toIndentedString(fromScanner)).append("\n");
    sb.append("    isExecuted: ").append(toIndentedString(isExecuted)).append("\n");
    sb.append("    relatedBinder: ").append(toIndentedString(relatedBinder)).append("\n");
    sb.append("    taskWorkDocumentOperationRealtionMode: ").append(toIndentedString(taskWorkDocumentOperationRealtionMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

