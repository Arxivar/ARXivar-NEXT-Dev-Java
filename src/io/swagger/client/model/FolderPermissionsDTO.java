/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PermissionPropertiesDTO;
import io.swagger.client.model.UserPermissionDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of folder permission
 */
@ApiModel(description = "Class of folder permission")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class FolderPermissionsDTO {
  @SerializedName("spread")
  private Boolean spread = null;

  @SerializedName("usersPermissions")
  private List<UserPermissionDTO> usersPermissions = null;

  @SerializedName("permissionsProperties")
  private List<PermissionPropertiesDTO> permissionsProperties = null;

  public FolderPermissionsDTO spread(Boolean spread) {
    this.spread = spread;
    return this;
  }

   /**
   * Spread to sub-levels folders
   * @return spread
  **/
  @ApiModelProperty(value = "Spread to sub-levels folders")
  public Boolean isSpread() {
    return spread;
  }

  public void setSpread(Boolean spread) {
    this.spread = spread;
  }

  public FolderPermissionsDTO usersPermissions(List<UserPermissionDTO> usersPermissions) {
    this.usersPermissions = usersPermissions;
    return this;
  }

  public FolderPermissionsDTO addUsersPermissionsItem(UserPermissionDTO usersPermissionsItem) {
    if (this.usersPermissions == null) {
      this.usersPermissions = new ArrayList<UserPermissionDTO>();
    }
    this.usersPermissions.add(usersPermissionsItem);
    return this;
  }

   /**
   * List of user permissions
   * @return usersPermissions
  **/
  @ApiModelProperty(value = "List of user permissions")
  public List<UserPermissionDTO> getUsersPermissions() {
    return usersPermissions;
  }

  public void setUsersPermissions(List<UserPermissionDTO> usersPermissions) {
    this.usersPermissions = usersPermissions;
  }

  public FolderPermissionsDTO permissionsProperties(List<PermissionPropertiesDTO> permissionsProperties) {
    this.permissionsProperties = permissionsProperties;
    return this;
  }

  public FolderPermissionsDTO addPermissionsPropertiesItem(PermissionPropertiesDTO permissionsPropertiesItem) {
    if (this.permissionsProperties == null) {
      this.permissionsProperties = new ArrayList<PermissionPropertiesDTO>();
    }
    this.permissionsProperties.add(permissionsPropertiesItem);
    return this;
  }

   /**
   * Permission Properties
   * @return permissionsProperties
  **/
  @ApiModelProperty(value = "Permission Properties")
  public List<PermissionPropertiesDTO> getPermissionsProperties() {
    return permissionsProperties;
  }

  public void setPermissionsProperties(List<PermissionPropertiesDTO> permissionsProperties) {
    this.permissionsProperties = permissionsProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FolderPermissionsDTO folderPermissionsDTO = (FolderPermissionsDTO) o;
    return Objects.equals(this.spread, folderPermissionsDTO.spread) &&
        Objects.equals(this.usersPermissions, folderPermissionsDTO.usersPermissions) &&
        Objects.equals(this.permissionsProperties, folderPermissionsDTO.permissionsProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spread, usersPermissions, permissionsProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FolderPermissionsDTO {\n");
    
    sb.append("    spread: ").append(toIndentedString(spread)).append("\n");
    sb.append("    usersPermissions: ").append(toIndentedString(usersPermissions)).append("\n");
    sb.append("    permissionsProperties: ").append(toIndentedString(permissionsProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

