/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Class of result of print barcode
 */
@ApiModel(description = "Class of result of print barcode")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class BarcodePrintResultDto {
  @SerializedName("printMethod")
  private Integer printMethod = null;

  @SerializedName("printerDataMode")
  private Integer printerDataMode = null;

  @SerializedName("printerName")
  private String printerName = null;

  @SerializedName("machineLanguageText")
  private String machineLanguageText = null;

  @SerializedName("graphicTemplateB64")
  private String graphicTemplateB64 = null;

  @SerializedName("templateDattableB64")
  private String templateDattableB64 = null;

  public BarcodePrintResultDto printMethod(Integer printMethod) {
    this.printMethod = printMethod;
    return this;
  }

   /**
   * Possible values:  0: Client  1: Server  2: ClientFile  3: TerminalServer 
   * @return printMethod
  **/
  @ApiModelProperty(value = "Possible values:  0: Client  1: Server  2: ClientFile  3: TerminalServer ")
  public Integer getPrintMethod() {
    return printMethod;
  }

  public void setPrintMethod(Integer printMethod) {
    this.printMethod = printMethod;
  }

  public BarcodePrintResultDto printerDataMode(Integer printerDataMode) {
    this.printerDataMode = printerDataMode;
    return this;
  }

   /**
   * Possible values:  0: MachineLanguage  1: GraphicData 
   * @return printerDataMode
  **/
  @ApiModelProperty(value = "Possible values:  0: MachineLanguage  1: GraphicData ")
  public Integer getPrinterDataMode() {
    return printerDataMode;
  }

  public void setPrinterDataMode(Integer printerDataMode) {
    this.printerDataMode = printerDataMode;
  }

  public BarcodePrintResultDto printerName(String printerName) {
    this.printerName = printerName;
    return this;
  }

   /**
   * Printer Name
   * @return printerName
  **/
  @ApiModelProperty(value = "Printer Name")
  public String getPrinterName() {
    return printerName;
  }

  public void setPrinterName(String printerName) {
    this.printerName = printerName;
  }

  public BarcodePrintResultDto machineLanguageText(String machineLanguageText) {
    this.machineLanguageText = machineLanguageText;
    return this;
  }

   /**
   * Language Machine
   * @return machineLanguageText
  **/
  @ApiModelProperty(value = "Language Machine")
  public String getMachineLanguageText() {
    return machineLanguageText;
  }

  public void setMachineLanguageText(String machineLanguageText) {
    this.machineLanguageText = machineLanguageText;
  }

  public BarcodePrintResultDto graphicTemplateB64(String graphicTemplateB64) {
    this.graphicTemplateB64 = graphicTemplateB64;
    return this;
  }

   /**
   * Graphic Template Blob
   * @return graphicTemplateB64
  **/
  @ApiModelProperty(value = "Graphic Template Blob")
  public String getGraphicTemplateB64() {
    return graphicTemplateB64;
  }

  public void setGraphicTemplateB64(String graphicTemplateB64) {
    this.graphicTemplateB64 = graphicTemplateB64;
  }

  public BarcodePrintResultDto templateDattableB64(String templateDattableB64) {
    this.templateDattableB64 = templateDattableB64;
    return this;
  }

   /**
   * Origin Datatable
   * @return templateDattableB64
  **/
  @ApiModelProperty(value = "Origin Datatable")
  public String getTemplateDattableB64() {
    return templateDattableB64;
  }

  public void setTemplateDattableB64(String templateDattableB64) {
    this.templateDattableB64 = templateDattableB64;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BarcodePrintResultDto barcodePrintResultDto = (BarcodePrintResultDto) o;
    return Objects.equals(this.printMethod, barcodePrintResultDto.printMethod) &&
        Objects.equals(this.printerDataMode, barcodePrintResultDto.printerDataMode) &&
        Objects.equals(this.printerName, barcodePrintResultDto.printerName) &&
        Objects.equals(this.machineLanguageText, barcodePrintResultDto.machineLanguageText) &&
        Objects.equals(this.graphicTemplateB64, barcodePrintResultDto.graphicTemplateB64) &&
        Objects.equals(this.templateDattableB64, barcodePrintResultDto.templateDattableB64);
  }

  @Override
  public int hashCode() {
    return Objects.hash(printMethod, printerDataMode, printerName, machineLanguageText, graphicTemplateB64, templateDattableB64);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BarcodePrintResultDto {\n");
    
    sb.append("    printMethod: ").append(toIndentedString(printMethod)).append("\n");
    sb.append("    printerDataMode: ").append(toIndentedString(printerDataMode)).append("\n");
    sb.append("    printerName: ").append(toIndentedString(printerName)).append("\n");
    sb.append("    machineLanguageText: ").append(toIndentedString(machineLanguageText)).append("\n");
    sb.append("    graphicTemplateB64: ").append(toIndentedString(graphicTemplateB64)).append("\n");
    sb.append("    templateDattableB64: ").append(toIndentedString(templateDattableB64)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

