/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FieldBaseForSearchDTO;
import io.swagger.client.model.SearchDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Criteria for all the call that retrieve information about additional field values or additional field filters
 */
@ApiModel(description = "Criteria for all the call that retrieve information about additional field values or additional field filters")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class FieldValuesSearchCriteriaDto {
  @SerializedName("searchFilterDto")
  private SearchDTO searchFilterDto = null;

  @SerializedName("fieldName")
  private String fieldName = null;

  @SerializedName("filterValue")
  private String filterValue = null;

  @SerializedName("filterId")
  private String filterId = null;

  @SerializedName("filters")
  private List<FieldBaseForSearchDTO> filters = null;

  public FieldValuesSearchCriteriaDto searchFilterDto(SearchDTO searchFilterDto) {
    this.searchFilterDto = searchFilterDto;
    return this;
  }

   /**
   * Filter for search
   * @return searchFilterDto
  **/
  @ApiModelProperty(value = "Filter for search")
  public SearchDTO getSearchFilterDto() {
    return searchFilterDto;
  }

  public void setSearchFilterDto(SearchDTO searchFilterDto) {
    this.searchFilterDto = searchFilterDto;
  }

  public FieldValuesSearchCriteriaDto fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Field Name
   * @return fieldName
  **/
  @ApiModelProperty(value = "Field Name")
  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public FieldValuesSearchCriteriaDto filterValue(String filterValue) {
    this.filterValue = filterValue;
    return this;
  }

   /**
   * Filter Value
   * @return filterValue
  **/
  @ApiModelProperty(value = "Filter Value")
  public String getFilterValue() {
    return filterValue;
  }

  public void setFilterValue(String filterValue) {
    this.filterValue = filterValue;
  }

  public FieldValuesSearchCriteriaDto filterId(String filterId) {
    this.filterId = filterId;
    return this;
  }

   /**
   * Filter Identifier
   * @return filterId
  **/
  @ApiModelProperty(value = "Filter Identifier")
  public String getFilterId() {
    return filterId;
  }

  public void setFilterId(String filterId) {
    this.filterId = filterId;
  }

  public FieldValuesSearchCriteriaDto filters(List<FieldBaseForSearchDTO> filters) {
    this.filters = filters;
    return this;
  }

  public FieldValuesSearchCriteriaDto addFiltersItem(FieldBaseForSearchDTO filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<FieldBaseForSearchDTO>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Filter Fields
   * @return filters
  **/
  @ApiModelProperty(value = "Filter Fields")
  public List<FieldBaseForSearchDTO> getFilters() {
    return filters;
  }

  public void setFilters(List<FieldBaseForSearchDTO> filters) {
    this.filters = filters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldValuesSearchCriteriaDto fieldValuesSearchCriteriaDto = (FieldValuesSearchCriteriaDto) o;
    return Objects.equals(this.searchFilterDto, fieldValuesSearchCriteriaDto.searchFilterDto) &&
        Objects.equals(this.fieldName, fieldValuesSearchCriteriaDto.fieldName) &&
        Objects.equals(this.filterValue, fieldValuesSearchCriteriaDto.filterValue) &&
        Objects.equals(this.filterId, fieldValuesSearchCriteriaDto.filterId) &&
        Objects.equals(this.filters, fieldValuesSearchCriteriaDto.filters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchFilterDto, fieldName, filterValue, filterId, filters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldValuesSearchCriteriaDto {\n");
    
    sb.append("    searchFilterDto: ").append(toIndentedString(searchFilterDto)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    filterValue: ").append(toIndentedString(filterValue)).append("\n");
    sb.append("    filterId: ").append(toIndentedString(filterId)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

