/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.UserCompleteDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Dynamic job operation multiple set request
 */
@ApiModel(description = "Dynamic job operation multiple set request")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class DynamicJobMultipleSetRequestDTO {
  @SerializedName("dynamicJobUserId")
  private Integer dynamicJobUserId = null;

  @SerializedName("taskWorkIds")
  private List<Integer> taskWorkIds = null;

  @SerializedName("users")
  private List<UserCompleteDTO> users = null;

  public DynamicJobMultipleSetRequestDTO dynamicJobUserId(Integer dynamicJobUserId) {
    this.dynamicJobUserId = dynamicJobUserId;
    return this;
  }

   /**
   * User id of dynamic job
   * @return dynamicJobUserId
  **/
  @ApiModelProperty(value = "User id of dynamic job")
  public Integer getDynamicJobUserId() {
    return dynamicJobUserId;
  }

  public void setDynamicJobUserId(Integer dynamicJobUserId) {
    this.dynamicJobUserId = dynamicJobUserId;
  }

  public DynamicJobMultipleSetRequestDTO taskWorkIds(List<Integer> taskWorkIds) {
    this.taskWorkIds = taskWorkIds;
    return this;
  }

  public DynamicJobMultipleSetRequestDTO addTaskWorkIdsItem(Integer taskWorkIdsItem) {
    if (this.taskWorkIds == null) {
      this.taskWorkIds = new ArrayList<Integer>();
    }
    this.taskWorkIds.add(taskWorkIdsItem);
    return this;
  }

   /**
   * TaskWork id to set
   * @return taskWorkIds
  **/
  @ApiModelProperty(value = "TaskWork id to set")
  public List<Integer> getTaskWorkIds() {
    return taskWorkIds;
  }

  public void setTaskWorkIds(List<Integer> taskWorkIds) {
    this.taskWorkIds = taskWorkIds;
  }

  public DynamicJobMultipleSetRequestDTO users(List<UserCompleteDTO> users) {
    this.users = users;
    return this;
  }

  public DynamicJobMultipleSetRequestDTO addUsersItem(UserCompleteDTO usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<UserCompleteDTO>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Values for dynamic job
   * @return users
  **/
  @ApiModelProperty(value = "Values for dynamic job")
  public List<UserCompleteDTO> getUsers() {
    return users;
  }

  public void setUsers(List<UserCompleteDTO> users) {
    this.users = users;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DynamicJobMultipleSetRequestDTO dynamicJobMultipleSetRequestDTO = (DynamicJobMultipleSetRequestDTO) o;
    return Objects.equals(this.dynamicJobUserId, dynamicJobMultipleSetRequestDTO.dynamicJobUserId) &&
        Objects.equals(this.taskWorkIds, dynamicJobMultipleSetRequestDTO.taskWorkIds) &&
        Objects.equals(this.users, dynamicJobMultipleSetRequestDTO.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dynamicJobUserId, taskWorkIds, users);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DynamicJobMultipleSetRequestDTO {\n");
    
    sb.append("    dynamicJobUserId: ").append(toIndentedString(dynamicJobUserId)).append("\n");
    sb.append("    taskWorkIds: ").append(toIndentedString(taskWorkIds)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

