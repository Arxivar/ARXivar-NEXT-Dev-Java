/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ProcessVariableDTO;
import io.swagger.client.model.ProcessVariablesFieldsDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TaskWorkVariableOperationDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class TaskWorkVariableOperationDTO {
  @SerializedName("processVariables")
  private List<ProcessVariableDTO> processVariables = null;

  @SerializedName("processVariablesFields")
  private ProcessVariablesFieldsDTO processVariablesFields = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("executed")
  private Boolean executed = null;

  @SerializedName("required")
  private Boolean required = null;

  public TaskWorkVariableOperationDTO processVariables(List<ProcessVariableDTO> processVariables) {
    this.processVariables = processVariables;
    return this;
  }

  public TaskWorkVariableOperationDTO addProcessVariablesItem(ProcessVariableDTO processVariablesItem) {
    if (this.processVariables == null) {
      this.processVariables = new ArrayList<ProcessVariableDTO>();
    }
    this.processVariables.add(processVariablesItem);
    return this;
  }

   /**
   * Get processVariables
   * @return processVariables
  **/
  @ApiModelProperty(value = "")
  public List<ProcessVariableDTO> getProcessVariables() {
    return processVariables;
  }

  public void setProcessVariables(List<ProcessVariableDTO> processVariables) {
    this.processVariables = processVariables;
  }

  public TaskWorkVariableOperationDTO processVariablesFields(ProcessVariablesFieldsDTO processVariablesFields) {
    this.processVariablesFields = processVariablesFields;
    return this;
  }

   /**
   * Get processVariablesFields
   * @return processVariablesFields
  **/
  @ApiModelProperty(value = "")
  public ProcessVariablesFieldsDTO getProcessVariablesFields() {
    return processVariablesFields;
  }

  public void setProcessVariablesFields(ProcessVariablesFieldsDTO processVariablesFields) {
    this.processVariablesFields = processVariablesFields;
  }

  public TaskWorkVariableOperationDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TaskWorkVariableOperationDTO executed(Boolean executed) {
    this.executed = executed;
    return this;
  }

   /**
   * Indica se l&#39;operazione di valorizzazione variabili è stata eseguita, è la somma logica di tutte le variabili sono state valorizzate
   * @return executed
  **/
  @ApiModelProperty(value = "Indica se l'operazione di valorizzazione variabili è stata eseguita, è la somma logica di tutte le variabili sono state valorizzate")
  public Boolean isExecuted() {
    return executed;
  }

  public void setExecuted(Boolean executed) {
    this.executed = executed;
  }

  public TaskWorkVariableOperationDTO required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskWorkVariableOperationDTO taskWorkVariableOperationDTO = (TaskWorkVariableOperationDTO) o;
    return Objects.equals(this.processVariables, taskWorkVariableOperationDTO.processVariables) &&
        Objects.equals(this.processVariablesFields, taskWorkVariableOperationDTO.processVariablesFields) &&
        Objects.equals(this.description, taskWorkVariableOperationDTO.description) &&
        Objects.equals(this.executed, taskWorkVariableOperationDTO.executed) &&
        Objects.equals(this.required, taskWorkVariableOperationDTO.required);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processVariables, processVariablesFields, description, executed, required);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskWorkVariableOperationDTO {\n");
    
    sb.append("    processVariables: ").append(toIndentedString(processVariables)).append("\n");
    sb.append("    processVariablesFields: ").append(toIndentedString(processVariablesFields)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    executed: ").append(toIndentedString(executed)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

