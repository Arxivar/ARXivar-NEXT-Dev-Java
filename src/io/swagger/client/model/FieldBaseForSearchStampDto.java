/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DependencyFieldItem;
import io.swagger.client.model.FieldBaseForSearchDTO;
import io.swagger.client.model.StampSearchFilterDto;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * FieldBaseForSearchStampDto
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class FieldBaseForSearchStampDto extends FieldBaseForSearchDTO {
  @SerializedName("operator")
  private Integer operator = null;

  @SerializedName("valore1")
  private StampSearchFilterDto valore1 = null;

  @SerializedName("valore2")
  private StampSearchFilterDto valore2 = null;

  public FieldBaseForSearchStampDto operator(Integer operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Possible values:  0: Non_Impostato  1: Minore  2: Minore_Uguale  3: Uguale  4: Maggiore_Uguale  5: Maggiore  6: Diverso  7: Compreso  8: Nullo  9: Non_Nullo  10: Nullo_o_Zero  11: Non_Nullo_e_Non_Zero  12: Escluso 
   * @return operator
  **/
  @ApiModelProperty(value = "Possible values:  0: Non_Impostato  1: Minore  2: Minore_Uguale  3: Uguale  4: Maggiore_Uguale  5: Maggiore  6: Diverso  7: Compreso  8: Nullo  9: Non_Nullo  10: Nullo_o_Zero  11: Non_Nullo_e_Non_Zero  12: Escluso ")
  public Integer getOperator() {
    return operator;
  }

  public void setOperator(Integer operator) {
    this.operator = operator;
  }

  public FieldBaseForSearchStampDto valore1(StampSearchFilterDto valore1) {
    this.valore1 = valore1;
    return this;
  }

   /**
   * The value of this field
   * @return valore1
  **/
  @ApiModelProperty(value = "The value of this field")
  public StampSearchFilterDto getValore1() {
    return valore1;
  }

  public void setValore1(StampSearchFilterDto valore1) {
    this.valore1 = valore1;
  }

  public FieldBaseForSearchStampDto valore2(StampSearchFilterDto valore2) {
    this.valore2 = valore2;
    return this;
  }

   /**
   * The second value for this field (used only for some operator)
   * @return valore2
  **/
  @ApiModelProperty(value = "The second value for this field (used only for some operator)")
  public StampSearchFilterDto getValore2() {
    return valore2;
  }

  public void setValore2(StampSearchFilterDto valore2) {
    this.valore2 = valore2;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FieldBaseForSearchStampDto fieldBaseForSearchStampDto = (FieldBaseForSearchStampDto) o;
    return Objects.equals(this.operator, fieldBaseForSearchStampDto.operator) &&
        Objects.equals(this.valore1, fieldBaseForSearchStampDto.valore1) &&
        Objects.equals(this.valore2, fieldBaseForSearchStampDto.valore2) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operator, valore1, valore2, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FieldBaseForSearchStampDto {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    valore1: ").append(toIndentedString(valore1)).append("\n");
    sb.append("    valore2: ").append(toIndentedString(valore2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

