/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SignCertUseDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of signature certificate use
 */
@ApiModel(description = "Class of signature certificate use")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class SignCertUseGetDTO {
  @SerializedName("signCertId")
  private Integer signCertId = null;

  @SerializedName("certUseList")
  private List<SignCertUseDTO> certUseList = null;

  @SerializedName("certPasswordIsSet")
  private Boolean certPasswordIsSet = null;

  public SignCertUseGetDTO signCertId(Integer signCertId) {
    this.signCertId = signCertId;
    return this;
  }

   /**
   * Identifier of certificate
   * @return signCertId
  **/
  @ApiModelProperty(value = "Identifier of certificate")
  public Integer getSignCertId() {
    return signCertId;
  }

  public void setSignCertId(Integer signCertId) {
    this.signCertId = signCertId;
  }

  public SignCertUseGetDTO certUseList(List<SignCertUseDTO> certUseList) {
    this.certUseList = certUseList;
    return this;
  }

  public SignCertUseGetDTO addCertUseListItem(SignCertUseDTO certUseListItem) {
    if (this.certUseList == null) {
      this.certUseList = new ArrayList<SignCertUseDTO>();
    }
    this.certUseList.add(certUseListItem);
    return this;
  }

   /**
   * List of certificate use
   * @return certUseList
  **/
  @ApiModelProperty(value = "List of certificate use")
  public List<SignCertUseDTO> getCertUseList() {
    return certUseList;
  }

  public void setCertUseList(List<SignCertUseDTO> certUseList) {
    this.certUseList = certUseList;
  }

  public SignCertUseGetDTO certPasswordIsSet(Boolean certPasswordIsSet) {
    this.certPasswordIsSet = certPasswordIsSet;
    return this;
  }

   /**
   * Password is set
   * @return certPasswordIsSet
  **/
  @ApiModelProperty(value = "Password is set")
  public Boolean isCertPasswordIsSet() {
    return certPasswordIsSet;
  }

  public void setCertPasswordIsSet(Boolean certPasswordIsSet) {
    this.certPasswordIsSet = certPasswordIsSet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignCertUseGetDTO signCertUseGetDTO = (SignCertUseGetDTO) o;
    return Objects.equals(this.signCertId, signCertUseGetDTO.signCertId) &&
        Objects.equals(this.certUseList, signCertUseGetDTO.certUseList) &&
        Objects.equals(this.certPasswordIsSet, signCertUseGetDTO.certPasswordIsSet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(signCertId, certUseList, certPasswordIsSet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignCertUseGetDTO {\n");
    
    sb.append("    signCertId: ").append(toIndentedString(signCertId)).append("\n");
    sb.append("    certUseList: ").append(toIndentedString(certUseList)).append("\n");
    sb.append("    certPasswordIsSet: ").append(toIndentedString(certPasswordIsSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

