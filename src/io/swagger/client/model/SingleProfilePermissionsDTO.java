/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PermissionItemDTO;
import io.swagger.client.model.PermissionPropertiesDTO;
import io.swagger.client.model.UserPermissionDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of single permission associated with a profile
 */
@ApiModel(description = "Class of single permission associated with a profile")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class SingleProfilePermissionsDTO {
  @SerializedName("readOnly")
  private Boolean readOnly = null;

  @SerializedName("permissionModality")
  private Integer permissionModality = null;

  @SerializedName("canManagePermissions")
  private List<PermissionItemDTO> canManagePermissions = null;

  @SerializedName("usersPermissions")
  private List<UserPermissionDTO> usersPermissions = null;

  @SerializedName("permissionsProperties")
  private List<PermissionPropertiesDTO> permissionsProperties = null;

  public SingleProfilePermissionsDTO readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

   /**
   * Read Only
   * @return readOnly
  **/
  @ApiModelProperty(value = "Read Only")
  public Boolean isReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }

  public SingleProfilePermissionsDTO permissionModality(Integer permissionModality) {
    this.permissionModality = permissionModality;
    return this;
  }

   /**
   * Possible values:  0: Additional  1: Exclusive 
   * @return permissionModality
  **/
  @ApiModelProperty(value = "Possible values:  0: Additional  1: Exclusive ")
  public Integer getPermissionModality() {
    return permissionModality;
  }

  public void setPermissionModality(Integer permissionModality) {
    this.permissionModality = permissionModality;
  }

  public SingleProfilePermissionsDTO canManagePermissions(List<PermissionItemDTO> canManagePermissions) {
    this.canManagePermissions = canManagePermissions;
    return this;
  }

  public SingleProfilePermissionsDTO addCanManagePermissionsItem(PermissionItemDTO canManagePermissionsItem) {
    if (this.canManagePermissions == null) {
      this.canManagePermissions = new ArrayList<PermissionItemDTO>();
    }
    this.canManagePermissions.add(canManagePermissionsItem);
    return this;
  }

   /**
   * Permissions item
   * @return canManagePermissions
  **/
  @ApiModelProperty(value = "Permissions item")
  public List<PermissionItemDTO> getCanManagePermissions() {
    return canManagePermissions;
  }

  public void setCanManagePermissions(List<PermissionItemDTO> canManagePermissions) {
    this.canManagePermissions = canManagePermissions;
  }

  public SingleProfilePermissionsDTO usersPermissions(List<UserPermissionDTO> usersPermissions) {
    this.usersPermissions = usersPermissions;
    return this;
  }

  public SingleProfilePermissionsDTO addUsersPermissionsItem(UserPermissionDTO usersPermissionsItem) {
    if (this.usersPermissions == null) {
      this.usersPermissions = new ArrayList<UserPermissionDTO>();
    }
    this.usersPermissions.add(usersPermissionsItem);
    return this;
  }

   /**
   * List of user permissions
   * @return usersPermissions
  **/
  @ApiModelProperty(value = "List of user permissions")
  public List<UserPermissionDTO> getUsersPermissions() {
    return usersPermissions;
  }

  public void setUsersPermissions(List<UserPermissionDTO> usersPermissions) {
    this.usersPermissions = usersPermissions;
  }

  public SingleProfilePermissionsDTO permissionsProperties(List<PermissionPropertiesDTO> permissionsProperties) {
    this.permissionsProperties = permissionsProperties;
    return this;
  }

  public SingleProfilePermissionsDTO addPermissionsPropertiesItem(PermissionPropertiesDTO permissionsPropertiesItem) {
    if (this.permissionsProperties == null) {
      this.permissionsProperties = new ArrayList<PermissionPropertiesDTO>();
    }
    this.permissionsProperties.add(permissionsPropertiesItem);
    return this;
  }

   /**
   * Permission Properties
   * @return permissionsProperties
  **/
  @ApiModelProperty(value = "Permission Properties")
  public List<PermissionPropertiesDTO> getPermissionsProperties() {
    return permissionsProperties;
  }

  public void setPermissionsProperties(List<PermissionPropertiesDTO> permissionsProperties) {
    this.permissionsProperties = permissionsProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SingleProfilePermissionsDTO singleProfilePermissionsDTO = (SingleProfilePermissionsDTO) o;
    return Objects.equals(this.readOnly, singleProfilePermissionsDTO.readOnly) &&
        Objects.equals(this.permissionModality, singleProfilePermissionsDTO.permissionModality) &&
        Objects.equals(this.canManagePermissions, singleProfilePermissionsDTO.canManagePermissions) &&
        Objects.equals(this.usersPermissions, singleProfilePermissionsDTO.usersPermissions) &&
        Objects.equals(this.permissionsProperties, singleProfilePermissionsDTO.permissionsProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(readOnly, permissionModality, canManagePermissions, usersPermissions, permissionsProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SingleProfilePermissionsDTO {\n");
    
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    permissionModality: ").append(toIndentedString(permissionModality)).append("\n");
    sb.append("    canManagePermissions: ").append(toIndentedString(canManagePermissions)).append("\n");
    sb.append("    usersPermissions: ").append(toIndentedString(usersPermissions)).append("\n");
    sb.append("    permissionsProperties: ").append(toIndentedString(permissionsProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

