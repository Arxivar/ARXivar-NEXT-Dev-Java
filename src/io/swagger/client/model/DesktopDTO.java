/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FindDTO;
import io.swagger.client.model.FolderDTO;
import io.swagger.client.model.MaskDTO;
import io.swagger.client.model.ModelDTO;
import io.swagger.client.model.ProfileForDesktopDTO;
import io.swagger.client.model.ViewDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of user desktop information
 */
@ApiModel(description = "Class of user desktop information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class DesktopDTO {
  @SerializedName("masks")
  private List<MaskDTO> masks = null;

  @SerializedName("quickSearches")
  private List<FindDTO> quickSearches = null;

  @SerializedName("profiles")
  private List<ProfileForDesktopDTO> profiles = null;

  @SerializedName("views")
  private List<ViewDTO> views = null;

  @SerializedName("models")
  private List<ModelDTO> models = null;

  @SerializedName("folders")
  private List<FolderDTO> folders = null;

  public DesktopDTO masks(List<MaskDTO> masks) {
    this.masks = masks;
    return this;
  }

  public DesktopDTO addMasksItem(MaskDTO masksItem) {
    if (this.masks == null) {
      this.masks = new ArrayList<MaskDTO>();
    }
    this.masks.add(masksItem);
    return this;
  }

   /**
   * List of Masks
   * @return masks
  **/
  @ApiModelProperty(value = "List of Masks")
  public List<MaskDTO> getMasks() {
    return masks;
  }

  public void setMasks(List<MaskDTO> masks) {
    this.masks = masks;
  }

  public DesktopDTO quickSearches(List<FindDTO> quickSearches) {
    this.quickSearches = quickSearches;
    return this;
  }

  public DesktopDTO addQuickSearchesItem(FindDTO quickSearchesItem) {
    if (this.quickSearches == null) {
      this.quickSearches = new ArrayList<FindDTO>();
    }
    this.quickSearches.add(quickSearchesItem);
    return this;
  }

   /**
   * List of Quick Search
   * @return quickSearches
  **/
  @ApiModelProperty(value = "List of Quick Search")
  public List<FindDTO> getQuickSearches() {
    return quickSearches;
  }

  public void setQuickSearches(List<FindDTO> quickSearches) {
    this.quickSearches = quickSearches;
  }

  public DesktopDTO profiles(List<ProfileForDesktopDTO> profiles) {
    this.profiles = profiles;
    return this;
  }

  public DesktopDTO addProfilesItem(ProfileForDesktopDTO profilesItem) {
    if (this.profiles == null) {
      this.profiles = new ArrayList<ProfileForDesktopDTO>();
    }
    this.profiles.add(profilesItem);
    return this;
  }

   /**
   * List of Documents
   * @return profiles
  **/
  @ApiModelProperty(value = "List of Documents")
  public List<ProfileForDesktopDTO> getProfiles() {
    return profiles;
  }

  public void setProfiles(List<ProfileForDesktopDTO> profiles) {
    this.profiles = profiles;
  }

  public DesktopDTO views(List<ViewDTO> views) {
    this.views = views;
    return this;
  }

  public DesktopDTO addViewsItem(ViewDTO viewsItem) {
    if (this.views == null) {
      this.views = new ArrayList<ViewDTO>();
    }
    this.views.add(viewsItem);
    return this;
  }

   /**
   * List of Views
   * @return views
  **/
  @ApiModelProperty(value = "List of Views")
  public List<ViewDTO> getViews() {
    return views;
  }

  public void setViews(List<ViewDTO> views) {
    this.views = views;
  }

  public DesktopDTO models(List<ModelDTO> models) {
    this.models = models;
    return this;
  }

  public DesktopDTO addModelsItem(ModelDTO modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<ModelDTO>();
    }
    this.models.add(modelsItem);
    return this;
  }

   /**
   * List of Models
   * @return models
  **/
  @ApiModelProperty(value = "List of Models")
  public List<ModelDTO> getModels() {
    return models;
  }

  public void setModels(List<ModelDTO> models) {
    this.models = models;
  }

  public DesktopDTO folders(List<FolderDTO> folders) {
    this.folders = folders;
    return this;
  }

  public DesktopDTO addFoldersItem(FolderDTO foldersItem) {
    if (this.folders == null) {
      this.folders = new ArrayList<FolderDTO>();
    }
    this.folders.add(foldersItem);
    return this;
  }

   /**
   * List of Folders
   * @return folders
  **/
  @ApiModelProperty(value = "List of Folders")
  public List<FolderDTO> getFolders() {
    return folders;
  }

  public void setFolders(List<FolderDTO> folders) {
    this.folders = folders;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DesktopDTO desktopDTO = (DesktopDTO) o;
    return Objects.equals(this.masks, desktopDTO.masks) &&
        Objects.equals(this.quickSearches, desktopDTO.quickSearches) &&
        Objects.equals(this.profiles, desktopDTO.profiles) &&
        Objects.equals(this.views, desktopDTO.views) &&
        Objects.equals(this.models, desktopDTO.models) &&
        Objects.equals(this.folders, desktopDTO.folders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(masks, quickSearches, profiles, views, models, folders);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DesktopDTO {\n");
    
    sb.append("    masks: ").append(toIndentedString(masks)).append("\n");
    sb.append("    quickSearches: ").append(toIndentedString(quickSearches)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    folders: ").append(toIndentedString(folders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

