/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.LabelTranslationsDto;
import io.swagger.client.model.LayoutDetailDTO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Class of layout deatil
 */
@ApiModel(description = "Class of layout deatil")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class LayoutDetailDTO {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("elementType")
  private Integer elementType = null;

  @SerializedName("elementId")
  private String elementId = null;

  @SerializedName("elementAction")
  private Integer elementAction = null;

  @SerializedName("orderIndex")
  private Integer orderIndex = null;

  @SerializedName("parentId")
  private Integer parentId = null;

  @SerializedName("layoutId")
  private Integer layoutId = null;

  @SerializedName("operation")
  private Integer operation = null;

  @SerializedName("favourite")
  private Boolean favourite = null;

  @SerializedName("translations")
  private List<LabelTranslationsDto> translations = null;

  @SerializedName("childs")
  private List<LayoutDetailDTO> childs = null;

  public LayoutDetailDTO id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier
   * @return id
  **/
  @ApiModelProperty(value = "Identifier")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public LayoutDetailDTO label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public LayoutDetailDTO elementType(Integer elementType) {
    this.elementType = elementType;
    return this;
  }

   /**
   * Element Type
   * @return elementType
  **/
  @ApiModelProperty(value = "Element Type")
  public Integer getElementType() {
    return elementType;
  }

  public void setElementType(Integer elementType) {
    this.elementType = elementType;
  }

  public LayoutDetailDTO elementId(String elementId) {
    this.elementId = elementId;
    return this;
  }

   /**
   * Element Identifier
   * @return elementId
  **/
  @ApiModelProperty(value = "Element Identifier")
  public String getElementId() {
    return elementId;
  }

  public void setElementId(String elementId) {
    this.elementId = elementId;
  }

  public LayoutDetailDTO elementAction(Integer elementAction) {
    this.elementAction = elementAction;
    return this;
  }

   /**
   * Element Action
   * @return elementAction
  **/
  @ApiModelProperty(value = "Element Action")
  public Integer getElementAction() {
    return elementAction;
  }

  public void setElementAction(Integer elementAction) {
    this.elementAction = elementAction;
  }

  public LayoutDetailDTO orderIndex(Integer orderIndex) {
    this.orderIndex = orderIndex;
    return this;
  }

   /**
   * Order
   * @return orderIndex
  **/
  @ApiModelProperty(value = "Order")
  public Integer getOrderIndex() {
    return orderIndex;
  }

  public void setOrderIndex(Integer orderIndex) {
    this.orderIndex = orderIndex;
  }

  public LayoutDetailDTO parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent Identifier
   * @return parentId
  **/
  @ApiModelProperty(value = "Parent Identifier")
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }

  public LayoutDetailDTO layoutId(Integer layoutId) {
    this.layoutId = layoutId;
    return this;
  }

   /**
   * Layout Identifier
   * @return layoutId
  **/
  @ApiModelProperty(value = "Layout Identifier")
  public Integer getLayoutId() {
    return layoutId;
  }

  public void setLayoutId(Integer layoutId) {
    this.layoutId = layoutId;
  }

  public LayoutDetailDTO operation(Integer operation) {
    this.operation = operation;
    return this;
  }

   /**
   * Operation Type
   * @return operation
  **/
  @ApiModelProperty(value = "Operation Type")
  public Integer getOperation() {
    return operation;
  }

  public void setOperation(Integer operation) {
    this.operation = operation;
  }

  public LayoutDetailDTO favourite(Boolean favourite) {
    this.favourite = favourite;
    return this;
  }

   /**
   * 
   * @return favourite
  **/
  @ApiModelProperty(value = "")
  public Boolean isFavourite() {
    return favourite;
  }

  public void setFavourite(Boolean favourite) {
    this.favourite = favourite;
  }

  public LayoutDetailDTO translations(List<LabelTranslationsDto> translations) {
    this.translations = translations;
    return this;
  }

  public LayoutDetailDTO addTranslationsItem(LabelTranslationsDto translationsItem) {
    if (this.translations == null) {
      this.translations = new ArrayList<LabelTranslationsDto>();
    }
    this.translations.add(translationsItem);
    return this;
  }

   /**
   * Translated Labels
   * @return translations
  **/
  @ApiModelProperty(value = "Translated Labels")
  public List<LabelTranslationsDto> getTranslations() {
    return translations;
  }

  public void setTranslations(List<LabelTranslationsDto> translations) {
    this.translations = translations;
  }

  public LayoutDetailDTO childs(List<LayoutDetailDTO> childs) {
    this.childs = childs;
    return this;
  }

  public LayoutDetailDTO addChildsItem(LayoutDetailDTO childsItem) {
    if (this.childs == null) {
      this.childs = new ArrayList<LayoutDetailDTO>();
    }
    this.childs.add(childsItem);
    return this;
  }

   /**
   * Details of child layout
   * @return childs
  **/
  @ApiModelProperty(value = "Details of child layout")
  public List<LayoutDetailDTO> getChilds() {
    return childs;
  }

  public void setChilds(List<LayoutDetailDTO> childs) {
    this.childs = childs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LayoutDetailDTO layoutDetailDTO = (LayoutDetailDTO) o;
    return Objects.equals(this.id, layoutDetailDTO.id) &&
        Objects.equals(this.label, layoutDetailDTO.label) &&
        Objects.equals(this.elementType, layoutDetailDTO.elementType) &&
        Objects.equals(this.elementId, layoutDetailDTO.elementId) &&
        Objects.equals(this.elementAction, layoutDetailDTO.elementAction) &&
        Objects.equals(this.orderIndex, layoutDetailDTO.orderIndex) &&
        Objects.equals(this.parentId, layoutDetailDTO.parentId) &&
        Objects.equals(this.layoutId, layoutDetailDTO.layoutId) &&
        Objects.equals(this.operation, layoutDetailDTO.operation) &&
        Objects.equals(this.favourite, layoutDetailDTO.favourite) &&
        Objects.equals(this.translations, layoutDetailDTO.translations) &&
        Objects.equals(this.childs, layoutDetailDTO.childs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label, elementType, elementId, elementAction, orderIndex, parentId, layoutId, operation, favourite, translations, childs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LayoutDetailDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    elementId: ").append(toIndentedString(elementId)).append("\n");
    sb.append("    elementAction: ").append(toIndentedString(elementAction)).append("\n");
    sb.append("    orderIndex: ").append(toIndentedString(orderIndex)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    layoutId: ").append(toIndentedString(layoutId)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    favourite: ").append(toIndentedString(favourite)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("    childs: ").append(toIndentedString(childs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

