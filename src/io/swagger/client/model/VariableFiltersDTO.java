/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FieldBaseForSearchBoolDto;
import io.swagger.client.model.FieldBaseForSearchDateTimeDto;
import io.swagger.client.model.FieldBaseForSearchDoubleDto;
import io.swagger.client.model.FieldBaseForSearchIntDto;
import io.swagger.client.model.FieldBaseForSearchListDto;
import io.swagger.client.model.FieldBaseForSearchStringDto;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * VariableFiltersDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class VariableFiltersDTO {
  @SerializedName("dateTimeFields")
  private List<FieldBaseForSearchDateTimeDto> dateTimeFields = null;

  @SerializedName("stringFields")
  private List<FieldBaseForSearchStringDto> stringFields = null;

  @SerializedName("intFields")
  private List<FieldBaseForSearchIntDto> intFields = null;

  @SerializedName("boolFields")
  private List<FieldBaseForSearchBoolDto> boolFields = null;

  @SerializedName("doubleFields")
  private List<FieldBaseForSearchDoubleDto> doubleFields = null;

  @SerializedName("stringListFields")
  private List<FieldBaseForSearchListDto> stringListFields = null;

  public VariableFiltersDTO dateTimeFields(List<FieldBaseForSearchDateTimeDto> dateTimeFields) {
    this.dateTimeFields = dateTimeFields;
    return this;
  }

  public VariableFiltersDTO addDateTimeFieldsItem(FieldBaseForSearchDateTimeDto dateTimeFieldsItem) {
    if (this.dateTimeFields == null) {
      this.dateTimeFields = new ArrayList<FieldBaseForSearchDateTimeDto>();
    }
    this.dateTimeFields.add(dateTimeFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field DateTime
   * @return dateTimeFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field DateTime")
  public List<FieldBaseForSearchDateTimeDto> getDateTimeFields() {
    return dateTimeFields;
  }

  public void setDateTimeFields(List<FieldBaseForSearchDateTimeDto> dateTimeFields) {
    this.dateTimeFields = dateTimeFields;
  }

  public VariableFiltersDTO stringFields(List<FieldBaseForSearchStringDto> stringFields) {
    this.stringFields = stringFields;
    return this;
  }

  public VariableFiltersDTO addStringFieldsItem(FieldBaseForSearchStringDto stringFieldsItem) {
    if (this.stringFields == null) {
      this.stringFields = new ArrayList<FieldBaseForSearchStringDto>();
    }
    this.stringFields.add(stringFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field string
   * @return stringFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field string")
  public List<FieldBaseForSearchStringDto> getStringFields() {
    return stringFields;
  }

  public void setStringFields(List<FieldBaseForSearchStringDto> stringFields) {
    this.stringFields = stringFields;
  }

  public VariableFiltersDTO intFields(List<FieldBaseForSearchIntDto> intFields) {
    this.intFields = intFields;
    return this;
  }

  public VariableFiltersDTO addIntFieldsItem(FieldBaseForSearchIntDto intFieldsItem) {
    if (this.intFields == null) {
      this.intFields = new ArrayList<FieldBaseForSearchIntDto>();
    }
    this.intFields.add(intFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field int
   * @return intFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field int")
  public List<FieldBaseForSearchIntDto> getIntFields() {
    return intFields;
  }

  public void setIntFields(List<FieldBaseForSearchIntDto> intFields) {
    this.intFields = intFields;
  }

  public VariableFiltersDTO boolFields(List<FieldBaseForSearchBoolDto> boolFields) {
    this.boolFields = boolFields;
    return this;
  }

  public VariableFiltersDTO addBoolFieldsItem(FieldBaseForSearchBoolDto boolFieldsItem) {
    if (this.boolFields == null) {
      this.boolFields = new ArrayList<FieldBaseForSearchBoolDto>();
    }
    this.boolFields.add(boolFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field bool
   * @return boolFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field bool")
  public List<FieldBaseForSearchBoolDto> getBoolFields() {
    return boolFields;
  }

  public void setBoolFields(List<FieldBaseForSearchBoolDto> boolFields) {
    this.boolFields = boolFields;
  }

  public VariableFiltersDTO doubleFields(List<FieldBaseForSearchDoubleDto> doubleFields) {
    this.doubleFields = doubleFields;
    return this;
  }

  public VariableFiltersDTO addDoubleFieldsItem(FieldBaseForSearchDoubleDto doubleFieldsItem) {
    if (this.doubleFields == null) {
      this.doubleFields = new ArrayList<FieldBaseForSearchDoubleDto>();
    }
    this.doubleFields.add(doubleFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field double
   * @return doubleFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field double")
  public List<FieldBaseForSearchDoubleDto> getDoubleFields() {
    return doubleFields;
  }

  public void setDoubleFields(List<FieldBaseForSearchDoubleDto> doubleFields) {
    this.doubleFields = doubleFields;
  }

  public VariableFiltersDTO stringListFields(List<FieldBaseForSearchListDto> stringListFields) {
    this.stringListFields = stringListFields;
    return this;
  }

  public VariableFiltersDTO addStringListFieldsItem(FieldBaseForSearchListDto stringListFieldsItem) {
    if (this.stringListFields == null) {
      this.stringListFields = new ArrayList<FieldBaseForSearchListDto>();
    }
    this.stringListFields.add(stringListFieldsItem);
    return this;
  }

   /**
   * Array of avaible filters for the additional field stringlist
   * @return stringListFields
  **/
  @ApiModelProperty(value = "Array of avaible filters for the additional field stringlist")
  public List<FieldBaseForSearchListDto> getStringListFields() {
    return stringListFields;
  }

  public void setStringListFields(List<FieldBaseForSearchListDto> stringListFields) {
    this.stringListFields = stringListFields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VariableFiltersDTO variableFiltersDTO = (VariableFiltersDTO) o;
    return Objects.equals(this.dateTimeFields, variableFiltersDTO.dateTimeFields) &&
        Objects.equals(this.stringFields, variableFiltersDTO.stringFields) &&
        Objects.equals(this.intFields, variableFiltersDTO.intFields) &&
        Objects.equals(this.boolFields, variableFiltersDTO.boolFields) &&
        Objects.equals(this.doubleFields, variableFiltersDTO.doubleFields) &&
        Objects.equals(this.stringListFields, variableFiltersDTO.stringListFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateTimeFields, stringFields, intFields, boolFields, doubleFields, stringListFields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VariableFiltersDTO {\n");
    
    sb.append("    dateTimeFields: ").append(toIndentedString(dateTimeFields)).append("\n");
    sb.append("    stringFields: ").append(toIndentedString(stringFields)).append("\n");
    sb.append("    intFields: ").append(toIndentedString(intFields)).append("\n");
    sb.append("    boolFields: ").append(toIndentedString(boolFields)).append("\n");
    sb.append("    doubleFields: ").append(toIndentedString(doubleFields)).append("\n");
    sb.append("    stringListFields: ").append(toIndentedString(stringListFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

