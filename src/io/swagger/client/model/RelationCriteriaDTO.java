/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SelectDTO;
import java.io.IOException;

/**
 * RelationCriteriaDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class RelationCriteriaDTO {
  @SerializedName("docNumber")
  private Integer docNumber = null;

  @SerializedName("relationExploringMethod")
  private Integer relationExploringMethod = null;

  @SerializedName("select")
  private SelectDTO select = null;

  public RelationCriteriaDTO docNumber(Integer docNumber) {
    this.docNumber = docNumber;
    return this;
  }

   /**
   * Document Identifier
   * @return docNumber
  **/
  @ApiModelProperty(value = "Document Identifier")
  public Integer getDocNumber() {
    return docNumber;
  }

  public void setDocNumber(Integer docNumber) {
    this.docNumber = docNumber;
  }

  public RelationCriteriaDTO relationExploringMethod(Integer relationExploringMethod) {
    this.relationExploringMethod = relationExploringMethod;
    return this;
  }

   /**
   * Possible values:  0: Class  1: Fathers  2: childs 
   * @return relationExploringMethod
  **/
  @ApiModelProperty(value = "Possible values:  0: Class  1: Fathers  2: childs ")
  public Integer getRelationExploringMethod() {
    return relationExploringMethod;
  }

  public void setRelationExploringMethod(Integer relationExploringMethod) {
    this.relationExploringMethod = relationExploringMethod;
  }

  public RelationCriteriaDTO select(SelectDTO select) {
    this.select = select;
    return this;
  }

   /**
   * Columns to show for the documents contained
   * @return select
  **/
  @ApiModelProperty(value = "Columns to show for the documents contained")
  public SelectDTO getSelect() {
    return select;
  }

  public void setSelect(SelectDTO select) {
    this.select = select;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelationCriteriaDTO relationCriteriaDTO = (RelationCriteriaDTO) o;
    return Objects.equals(this.docNumber, relationCriteriaDTO.docNumber) &&
        Objects.equals(this.relationExploringMethod, relationCriteriaDTO.relationExploringMethod) &&
        Objects.equals(this.select, relationCriteriaDTO.select);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docNumber, relationExploringMethod, select);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelationCriteriaDTO {\n");
    
    sb.append("    docNumber: ").append(toIndentedString(docNumber)).append("\n");
    sb.append("    relationExploringMethod: ").append(toIndentedString(relationExploringMethod)).append("\n");
    sb.append("    select: ").append(toIndentedString(select)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

