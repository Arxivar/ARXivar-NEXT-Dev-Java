/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Process Variable information
 */
@ApiModel(description = "Process Variable information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-11T12:02:47.866+02:00")
public class ProcessVariableDTO {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("processId")
  private Integer processId = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("parentId")
  private Integer parentId = null;

  @SerializedName("labelTranslatedId")
  private Integer labelTranslatedId = null;

  @SerializedName("descriptionTranslatedId")
  private Integer descriptionTranslatedId = null;

  @SerializedName("textFormat")
  private Integer textFormat = null;

  @SerializedName("maxRowNumber")
  private Integer maxRowNumber = null;

  @SerializedName("isLimitToList")
  private Boolean isLimitToList = null;

  @SerializedName("processVariableFormat")
  private Integer processVariableFormat = null;

  public ProcessVariableDTO id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier
   * @return id
  **/
  @ApiModelProperty(value = "Identifier")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ProcessVariableDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @ApiModelProperty(value = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProcessVariableDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description
   * @return description
  **/
  @ApiModelProperty(value = "Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProcessVariableDTO processId(Integer processId) {
    this.processId = processId;
    return this;
  }

   /**
   * Process Identifier
   * @return processId
  **/
  @ApiModelProperty(value = "Process Identifier")
  public Integer getProcessId() {
    return processId;
  }

  public void setProcessId(Integer processId) {
    this.processId = processId;
  }

  public ProcessVariableDTO label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Label
   * @return label
  **/
  @ApiModelProperty(value = "Label")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public ProcessVariableDTO value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Value
   * @return value
  **/
  @ApiModelProperty(value = "Value")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ProcessVariableDTO parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Parent Matrix Variable Identifier
   * @return parentId
  **/
  @ApiModelProperty(value = "Parent Matrix Variable Identifier")
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }

  public ProcessVariableDTO labelTranslatedId(Integer labelTranslatedId) {
    this.labelTranslatedId = labelTranslatedId;
    return this;
  }

   /**
   * Translated Label Identifier
   * @return labelTranslatedId
  **/
  @ApiModelProperty(value = "Translated Label Identifier")
  public Integer getLabelTranslatedId() {
    return labelTranslatedId;
  }

  public void setLabelTranslatedId(Integer labelTranslatedId) {
    this.labelTranslatedId = labelTranslatedId;
  }

  public ProcessVariableDTO descriptionTranslatedId(Integer descriptionTranslatedId) {
    this.descriptionTranslatedId = descriptionTranslatedId;
    return this;
  }

   /**
   * Trasnlated description Identifier
   * @return descriptionTranslatedId
  **/
  @ApiModelProperty(value = "Trasnlated description Identifier")
  public Integer getDescriptionTranslatedId() {
    return descriptionTranslatedId;
  }

  public void setDescriptionTranslatedId(Integer descriptionTranslatedId) {
    this.descriptionTranslatedId = descriptionTranslatedId;
  }

  public ProcessVariableDTO textFormat(Integer textFormat) {
    this.textFormat = textFormat;
    return this;
  }

   /**
   * Format for visualization
   * @return textFormat
  **/
  @ApiModelProperty(value = "Format for visualization")
  public Integer getTextFormat() {
    return textFormat;
  }

  public void setTextFormat(Integer textFormat) {
    this.textFormat = textFormat;
  }

  public ProcessVariableDTO maxRowNumber(Integer maxRowNumber) {
    this.maxRowNumber = maxRowNumber;
    return this;
  }

   /**
   * Maximun number of row of text
   * @return maxRowNumber
  **/
  @ApiModelProperty(value = "Maximun number of row of text")
  public Integer getMaxRowNumber() {
    return maxRowNumber;
  }

  public void setMaxRowNumber(Integer maxRowNumber) {
    this.maxRowNumber = maxRowNumber;
  }

  public ProcessVariableDTO isLimitToList(Boolean isLimitToList) {
    this.isLimitToList = isLimitToList;
    return this;
  }

   /**
   * Is limit to list
   * @return isLimitToList
  **/
  @ApiModelProperty(value = "Is limit to list")
  public Boolean isIsLimitToList() {
    return isLimitToList;
  }

  public void setIsLimitToList(Boolean isLimitToList) {
    this.isLimitToList = isLimitToList;
  }

  public ProcessVariableDTO processVariableFormat(Integer processVariableFormat) {
    this.processVariableFormat = processVariableFormat;
    return this;
  }

   /**
   * Possible values:  1: Text  2: Number  3: DateTime  4: Boolean  5: Combo  6: Matrix  7: TextArea  8: TableBox 
   * @return processVariableFormat
  **/
  @ApiModelProperty(value = "Possible values:  1: Text  2: Number  3: DateTime  4: Boolean  5: Combo  6: Matrix  7: TextArea  8: TableBox ")
  public Integer getProcessVariableFormat() {
    return processVariableFormat;
  }

  public void setProcessVariableFormat(Integer processVariableFormat) {
    this.processVariableFormat = processVariableFormat;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessVariableDTO processVariableDTO = (ProcessVariableDTO) o;
    return Objects.equals(this.id, processVariableDTO.id) &&
        Objects.equals(this.name, processVariableDTO.name) &&
        Objects.equals(this.description, processVariableDTO.description) &&
        Objects.equals(this.processId, processVariableDTO.processId) &&
        Objects.equals(this.label, processVariableDTO.label) &&
        Objects.equals(this.value, processVariableDTO.value) &&
        Objects.equals(this.parentId, processVariableDTO.parentId) &&
        Objects.equals(this.labelTranslatedId, processVariableDTO.labelTranslatedId) &&
        Objects.equals(this.descriptionTranslatedId, processVariableDTO.descriptionTranslatedId) &&
        Objects.equals(this.textFormat, processVariableDTO.textFormat) &&
        Objects.equals(this.maxRowNumber, processVariableDTO.maxRowNumber) &&
        Objects.equals(this.isLimitToList, processVariableDTO.isLimitToList) &&
        Objects.equals(this.processVariableFormat, processVariableDTO.processVariableFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, processId, label, value, parentId, labelTranslatedId, descriptionTranslatedId, textFormat, maxRowNumber, isLimitToList, processVariableFormat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessVariableDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    processId: ").append(toIndentedString(processId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    labelTranslatedId: ").append(toIndentedString(labelTranslatedId)).append("\n");
    sb.append("    descriptionTranslatedId: ").append(toIndentedString(descriptionTranslatedId)).append("\n");
    sb.append("    textFormat: ").append(toIndentedString(textFormat)).append("\n");
    sb.append("    maxRowNumber: ").append(toIndentedString(maxRowNumber)).append("\n");
    sb.append("    isLimitToList: ").append(toIndentedString(isLimitToList)).append("\n");
    sb.append("    processVariableFormat: ").append(toIndentedString(processVariableFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

