/*
 * Abletech.Arxivar.Server.WebApi.Services
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.DocumentTypeBaseDTO;
import io.swagger.client.model.DocumentTypeBaseTreeDTO;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DocumentTypesApi {
    private ApiClient apiClient;

    public DocumentTypesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DocumentTypesApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for documentTypesGet
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessUnitCode Business Unit (optional) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetCall(Integer mode, String businessUnitCode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/DocumentTypes/{mode}/mode"
            .replaceAll("\\{" + "mode" + "\\}", apiClient.escapeString(mode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (businessUnitCode != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("businessUnitCode", businessUnitCode));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call documentTypesGetValidateBeforeCall(Integer mode, String businessUnitCode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mode' is set
        if (mode == null) {
            throw new ApiException("Missing the required parameter 'mode' when calling documentTypesGet(Async)");
        }
        

        com.squareup.okhttp.Call call = documentTypesGetCall(mode, businessUnitCode, progressListener, progressRequestListener);
        return call;

    }

    /**
     * This call returns the document types that the user can access
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessUnitCode Business Unit (optional) (optional)
     * @return List&lt;DocumentTypeBaseDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public List<DocumentTypeBaseDTO> documentTypesGet(Integer mode, String businessUnitCode) throws ApiException {
        ApiResponse<List<DocumentTypeBaseDTO>> resp = documentTypesGetWithHttpInfo(mode, businessUnitCode);
        return resp.getData();
    }

    /**
     * This call returns the document types that the user can access
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessUnitCode Business Unit (optional) (optional)
     * @return ApiResponse&lt;List&lt;DocumentTypeBaseDTO&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<List<DocumentTypeBaseDTO>> documentTypesGetWithHttpInfo(Integer mode, String businessUnitCode) throws ApiException {
        com.squareup.okhttp.Call call = documentTypesGetValidateBeforeCall(mode, businessUnitCode, null, null);
        Type localVarReturnType = new TypeToken<List<DocumentTypeBaseDTO>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This call returns the document types that the user can access (asynchronously)
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessUnitCode Business Unit (optional) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetAsync(Integer mode, String businessUnitCode, final ApiCallback<List<DocumentTypeBaseDTO>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = documentTypesGetValidateBeforeCall(mode, businessUnitCode, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<DocumentTypeBaseDTO>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for documentTypesGetBySystemId
     * @param documentTypeId  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetBySystemIdCall(Integer documentTypeId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/DocumentTypes/{documentTypeId}"
            .replaceAll("\\{" + "documentTypeId" + "\\}", apiClient.escapeString(documentTypeId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call documentTypesGetBySystemIdValidateBeforeCall(Integer documentTypeId, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'documentTypeId' is set
        if (documentTypeId == null) {
            throw new ApiException("Missing the required parameter 'documentTypeId' when calling documentTypesGetBySystemId(Async)");
        }
        

        com.squareup.okhttp.Call call = documentTypesGetBySystemIdCall(documentTypeId, progressListener, progressRequestListener);
        return call;

    }

    /**
     * This call returns a specific document type
     * 
     * @param documentTypeId  (required)
     * @return DocumentTypeBaseDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DocumentTypeBaseDTO documentTypesGetBySystemId(Integer documentTypeId) throws ApiException {
        ApiResponse<DocumentTypeBaseDTO> resp = documentTypesGetBySystemIdWithHttpInfo(documentTypeId);
        return resp.getData();
    }

    /**
     * This call returns a specific document type
     * 
     * @param documentTypeId  (required)
     * @return ApiResponse&lt;DocumentTypeBaseDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DocumentTypeBaseDTO> documentTypesGetBySystemIdWithHttpInfo(Integer documentTypeId) throws ApiException {
        com.squareup.okhttp.Call call = documentTypesGetBySystemIdValidateBeforeCall(documentTypeId, null, null);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This call returns a specific document type (asynchronously)
     * 
     * @param documentTypeId  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetBySystemIdAsync(Integer documentTypeId, final ApiCallback<DocumentTypeBaseDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = documentTypesGetBySystemIdValidateBeforeCall(documentTypeId, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for documentTypesGetOld
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @deprecated
     */
    @Deprecated
    public com.squareup.okhttp.Call documentTypesGetOldCall(Integer mode, String businessunitcode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/DocumentTypes/{mode}/mode/{businessunitcode}"
            .replaceAll("\\{" + "mode" + "\\}", apiClient.escapeString(mode.toString()))
            .replaceAll("\\{" + "businessunitcode" + "\\}", apiClient.escapeString(businessunitcode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call documentTypesGetOldValidateBeforeCall(Integer mode, String businessunitcode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mode' is set
        if (mode == null) {
            throw new ApiException("Missing the required parameter 'mode' when calling documentTypesGetOld(Async)");
        }
        
        // verify the required parameter 'businessunitcode' is set
        if (businessunitcode == null) {
            throw new ApiException("Missing the required parameter 'businessunitcode' when calling documentTypesGetOld(Async)");
        }
        

        com.squareup.okhttp.Call call = documentTypesGetOldCall(mode, businessunitcode, progressListener, progressRequestListener);
        return call;

    }

    /**
     * This call returns the document types that the user can access
     * This method is deprecated. Use /api/DocumentTypes/{mode}/mode?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @return List&lt;DocumentTypeBaseDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @deprecated
     */
    @Deprecated
    public List<DocumentTypeBaseDTO> documentTypesGetOld(Integer mode, String businessunitcode) throws ApiException {
        ApiResponse<List<DocumentTypeBaseDTO>> resp = documentTypesGetOldWithHttpInfo(mode, businessunitcode);
        return resp.getData();
    }

    /**
     * This call returns the document types that the user can access
     * This method is deprecated. Use /api/DocumentTypes/{mode}/mode?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @return ApiResponse&lt;List&lt;DocumentTypeBaseDTO&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @deprecated
     */
    @Deprecated
    public ApiResponse<List<DocumentTypeBaseDTO>> documentTypesGetOldWithHttpInfo(Integer mode, String businessunitcode) throws ApiException {
        com.squareup.okhttp.Call call = documentTypesGetOldValidateBeforeCall(mode, businessunitcode, null, null);
        Type localVarReturnType = new TypeToken<List<DocumentTypeBaseDTO>>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This call returns the document types that the user can access (asynchronously)
     * This method is deprecated. Use /api/DocumentTypes/{mode}/mode?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @deprecated
     */
    @Deprecated
    public com.squareup.okhttp.Call documentTypesGetOldAsync(Integer mode, String businessunitcode, final ApiCallback<List<DocumentTypeBaseDTO>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = documentTypesGetOldValidateBeforeCall(mode, businessunitcode, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<DocumentTypeBaseDTO>>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for documentTypesGetTree
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetTreeCall(Integer mode, String businessunitcode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/DocumentTypes/GetTree/{mode}"
            .replaceAll("\\{" + "mode" + "\\}", apiClient.escapeString(mode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (businessunitcode != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("businessunitcode", businessunitcode));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call documentTypesGetTreeValidateBeforeCall(Integer mode, String businessunitcode, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mode' is set
        if (mode == null) {
            throw new ApiException("Missing the required parameter 'mode' when calling documentTypesGetTree(Async)");
        }
        

        com.squareup.okhttp.Call call = documentTypesGetTreeCall(mode, businessunitcode, progressListener, progressRequestListener);
        return call;

    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (optional)
     * @return DocumentTypeBaseTreeDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DocumentTypeBaseTreeDTO documentTypesGetTree(Integer mode, String businessunitcode) throws ApiException {
        ApiResponse<DocumentTypeBaseTreeDTO> resp = documentTypesGetTreeWithHttpInfo(mode, businessunitcode);
        return resp.getData();
    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (optional)
     * @return ApiResponse&lt;DocumentTypeBaseTreeDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DocumentTypeBaseTreeDTO> documentTypesGetTreeWithHttpInfo(Integer mode, String businessunitcode) throws ApiException {
        com.squareup.okhttp.Call call = documentTypesGetTreeValidateBeforeCall(mode, businessunitcode, null, null);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseTreeDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship (asynchronously)
     * 
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call documentTypesGetTreeAsync(Integer mode, String businessunitcode, final ApiCallback<DocumentTypeBaseTreeDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = documentTypesGetTreeValidateBeforeCall(mode, businessunitcode, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseTreeDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for documentTypesGetTreeOld
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param forProtocol If the type is of Protocol (PA) (default false) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @deprecated
     */
    @Deprecated
    public com.squareup.okhttp.Call documentTypesGetTreeOldCall(Integer mode, String businessunitcode, Boolean forProtocol, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/DocumentTypes/GetTree/{mode}/{businessunitcode}/{forProtocol}"
            .replaceAll("\\{" + "mode" + "\\}", apiClient.escapeString(mode.toString()))
            .replaceAll("\\{" + "businessunitcode" + "\\}", apiClient.escapeString(businessunitcode.toString()))
            .replaceAll("\\{" + "forProtocol" + "\\}", apiClient.escapeString(forProtocol.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json", "text/json", "application/xml", "text/xml"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call documentTypesGetTreeOldValidateBeforeCall(Integer mode, String businessunitcode, Boolean forProtocol, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'mode' is set
        if (mode == null) {
            throw new ApiException("Missing the required parameter 'mode' when calling documentTypesGetTreeOld(Async)");
        }
        
        // verify the required parameter 'businessunitcode' is set
        if (businessunitcode == null) {
            throw new ApiException("Missing the required parameter 'businessunitcode' when calling documentTypesGetTreeOld(Async)");
        }
        
        // verify the required parameter 'forProtocol' is set
        if (forProtocol == null) {
            throw new ApiException("Missing the required parameter 'forProtocol' when calling documentTypesGetTreeOld(Async)");
        }
        

        com.squareup.okhttp.Call call = documentTypesGetTreeOldCall(mode, businessunitcode, forProtocol, progressListener, progressRequestListener);
        return call;

    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship
     * This method is deprecated. Use /api/DocumentTypes/GetTree/{mode}?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param forProtocol If the type is of Protocol (PA) (default false) (required)
     * @return DocumentTypeBaseTreeDTO
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @deprecated
     */
    @Deprecated
    public DocumentTypeBaseTreeDTO documentTypesGetTreeOld(Integer mode, String businessunitcode, Boolean forProtocol) throws ApiException {
        ApiResponse<DocumentTypeBaseTreeDTO> resp = documentTypesGetTreeOldWithHttpInfo(mode, businessunitcode, forProtocol);
        return resp.getData();
    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship
     * This method is deprecated. Use /api/DocumentTypes/GetTree/{mode}?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param forProtocol If the type is of Protocol (PA) (default false) (required)
     * @return ApiResponse&lt;DocumentTypeBaseTreeDTO&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @deprecated
     */
    @Deprecated
    public ApiResponse<DocumentTypeBaseTreeDTO> documentTypesGetTreeOldWithHttpInfo(Integer mode, String businessunitcode, Boolean forProtocol) throws ApiException {
        com.squareup.okhttp.Call call = documentTypesGetTreeOldValidateBeforeCall(mode, businessunitcode, forProtocol, null, null);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseTreeDTO>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * This call returns the document types that the user can access but in a preformatted tree with parent/child relationship (asynchronously)
     * This method is deprecated. Use /api/DocumentTypes/GetTree/{mode}?businessunitcode&#x3D;{businessunitcode}
     * @param mode Possible values:  0: Archive  1: Search  2: EditProfile  (required)
     * @param businessunitcode Business Unit (optional) (required)
     * @param forProtocol If the type is of Protocol (PA) (default false) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @deprecated
     */
    @Deprecated
    public com.squareup.okhttp.Call documentTypesGetTreeOldAsync(Integer mode, String businessunitcode, Boolean forProtocol, final ApiCallback<DocumentTypeBaseTreeDTO> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = documentTypesGetTreeOldValidateBeforeCall(mode, businessunitcode, forProtocol, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DocumentTypeBaseTreeDTO>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
